{
  "hash": "44f34c9d901883224920f27e983b01a5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6 Instructions\"\nauthor: \"Michele Carlin\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"04/03/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - Michele Carlin\n  - fed_rate\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(dbplyr)\nlibrary(readr)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scales)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\nRead in and view summary of 'FedFundsRate' dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates <- read_csv (\"_data/FedFundsRate.csv\")\nView(FedRates)\nview(dfSummary(FedRates))\n```\n:::\n\n\nThis dataset contains 904 rows and 10 columns.  Each row contains various federal funds data points (e.g., the Effective Federal Funds Rate, including lower and upper targets, as well as unemployment and inflation rates).  Monthly data is provided from 1954 to 2017. \n\nBased on my review of the df summary, it appears that the majority of the data is from the 1st of each month, therefore I am going to run a frequency table to see how many rows are from dates other than the 1st of the month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates %>% count(Day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 29 × 2\n     Day     n\n   <dbl> <int>\n 1     1   753\n 2     2     6\n 3     3     3\n 4     4     4\n 5     5     4\n 6     6    10\n 7     7     4\n 8     8     4\n 9     9     7\n10    10     3\n# … with 19 more rows\n```\n:::\n:::\n\n\nAfter reviewed the frequency table above of the 'Day' variable, you can see that the majority of the data is based on the 1st of each month, therefore I am going to filter out all rows that are not from the 1st of the month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(FedRates$Day > 1, na.rm=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 151\n```\n:::\n\n```{.r .cell-code}\nnrow(FedRates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 904\n```\n:::\n\n```{.r .cell-code}\nFedRates <- FedRates %>%\n  filter(Day == 1)\nnrow(FedRates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 753\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates <- FedRates%>%\n  mutate(date = make_date(Year, Month, Day))\n\nselect(FedRates, Year, Month, Day, date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 753 × 4\n    Year Month   Day date      \n   <dbl> <dbl> <dbl> <date>    \n 1  1954     7     1 1954-07-01\n 2  1954     8     1 1954-08-01\n 3  1954     9     1 1954-09-01\n 4  1954    10     1 1954-10-01\n 5  1954    11     1 1954-11-01\n 6  1954    12     1 1954-12-01\n 7  1955     1     1 1955-01-01\n 8  1955     2     1 1955-02-01\n 9  1955     3     1 1955-03-01\n10  1955     4     1 1955-04-01\n# … with 743 more rows\n```\n:::\n\n```{.r .cell-code}\nview(dfSummary(FedRates))\n```\n:::\n\n\nSummarise \"umemployment rate\" variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates %>% \n  group_by(Year) %>%\n  summarise(Avg_UR = mean(`Unemployment Rate`),\n            Min_UR = min(`Unemployment Rate`),\n            Max_UR = max(`Unemployment Rate`))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 4\n    Year Avg_UR Min_UR Max_UR\n   <dbl>  <dbl>  <dbl>  <dbl>\n 1  1954   5.65    5      6.1\n 2  1955   4.37    4      4.9\n 3  1956   4.12    3.9    4.4\n 4  1957   4.3     3.7    5.2\n 5  1958   6.84    5.8    7.5\n 6  1959   5.45    5      6  \n 7  1960   5.54    4.8    6.6\n 8  1961   6.69    6      7.1\n 9  1962   5.57    5.4    5.8\n10  1963   5.64    5.4    5.9\n# … with 54 more rows\n```\n:::\n:::\n\n\nTime series graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates %>%\n filter(!is.na(`Unemployment Rate`)) %>%\n ggplot(aes(x=date, y=`Unemployment Rate`)) + \n   geom_line()+\n   labs(title = \"Unemployment Rates: 1954 - 2017\", x = \"Date\", y = \"Rate\")+\n  scale_x_date(date_breaks = \"5 years\")+\n  theme(axis.text.x=element_text(angle=45,hjust=1))\n```\n\n::: {.cell-output-display}\n![](MicheleCarlin_hw6_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nFedRates %>%\n  filter(!is.na(`Unemployment Rate`) & !is.na(`Inflation Rate`)) %>%\nggplot(aes (date)) + \n  geom_line(aes(y = `Unemployment Rate`, colour = \"red\", labels = \"Unemployment\")) +   \n  geom_line(aes(y = `Inflation Rate`, colour = \"blue\"))+\n   labs(title = \"Unemployment and Inflation Rates: 1954 - 2017\", y = \"Rate\", x = \"Year\")+\n  scale_x_date(date_breaks = \"5 years\", labels = date_format(\"%Y\"))+\n  theme(axis.text.x=element_text(angle=45,hjust=1))\n```\n\n::: {.cell-output-display}\n![](MicheleCarlin_hw6_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\nHow do I change labels on legend?\n\nCreate new 'Quarter' variable using mutate and lubridate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates <- FedRates %>%\n  mutate(Quarter = paste0(quarter(date))) \n```\n:::\n\n\nCreate clustered bar graph using new 'Quarter' variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFedRates %>%\n  filter(Year > 2009 & Year < 2018) %>%\n  ggplot(aes(fill=Quarter, x=Year, y=`Unemployment Rate`)) + \n  geom_bar(position=\"dodge\", stat=\"summary\") +\n     labs(title = \"Quarterly Unemployment Rate: 2010 - 2017 \", y = \"Rate\", x = \"Year\")\n```\n\n::: {.cell-output-display}\n![](MicheleCarlin_hw6_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nhow do I get all x-axis labels to show on graph? there is only Q1 data available for 2017 - is there a way to make the red bar the same width as the other red bars?",
    "supporting": [
      "MicheleCarlin_hw6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}