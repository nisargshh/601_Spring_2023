{
  "hash": "05cca74e4cb97e51cb63546021315add",
  "result": {
    "markdown": "---\ntitle: \"Keith Martin Challenge 5\"\nauthor: \"Keith Martin\"\ndescription: \"Introduction to Visualization\"\ndate: \"04/4/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - cereal\n  \n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(summarytools)\nlibrary(ggrepel)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nFor this challenge, I decided to use the cereal data set. This data set was already very tidy and did not really require any data cleaning.\n\n\n## Read in data\n\nI read in the below data and displayed the first five rows as a header. As you can see, the data is split into the name of the cereal, the amount of sodium, the amount of sugar and whether or not it is an \"Adult\" cereal or \"Child\" cereal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal<-read_csv(\"_data/cereal.csv\")\nhead(cereal,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  Cereal              Sodium Sugar Type \n  <chr>                <dbl> <dbl> <chr>\n1 Frosted Mini Wheats      0    11 A    \n2 Raisin Bran            340    18 A    \n3 All Bran                70     5 A    \n4 Apple Jacks            140    14 C    \n5 Captain Crunch         200    12 C    \n```\n:::\n:::\n\n\nI changed A to Adult and C to Child just so that the data set was more clear.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal<-cereal%>%\n  mutate(Type = recode(Type, \"A\"= \"Adult\", \"C\"= \"Child\"))\nhead(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  Cereal              Sodium Sugar Type \n  <chr>                <dbl> <dbl> <chr>\n1 Frosted Mini Wheats      0    11 Adult\n2 Raisin Bran            340    18 Adult\n3 All Bran                70     5 Adult\n4 Apple Jacks            140    14 Child\n5 Captain Crunch         200    12 Child\n6 Cheerios               180     1 Child\n```\n:::\n:::\n\n\nAs you can see below, there we're four columns and 20 rows. This was a very small data set and did not require much changing for the visualizations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Cereal\" \"Sodium\" \"Sugar\"  \"Type\"  \n```\n:::\n\n```{.r .cell-code}\nnrow(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n\n```{.r .cell-code}\nncol(cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nI included the basic summary statistics with some condensed visualizations. This provides some useful summary statistics to get a better idea of distribution of the data. As you can see, the data set is relatively short, so not much tidying was required.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summarytools::dfSummary(cereal, \n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, ),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>cereal</h4>\n<strong>Dimensions</strong>: 20 x 4\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>No</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Valid</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\">1</td>\n      <td align=\"left\">Cereal\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. All Bran</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Apple Jacks</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. Captain Crunch</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. Cheerios</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. Cinnamon Toast Crunch</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. Corn Flakes</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. Crackling Oat Bran</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. Fiber One</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. Froot Loops</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. Frosted Flakes</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 10 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">1</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">10</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">50.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAEEAAAC9CAQAAABGrtisAAAAAmJLR0QA/4ePzL8AAAAHdElNRQfnBAUVKjK4mitbAAABEUlEQVR42u3csW3DQBQDUCrwjhki8zg7ZEq7SAKcDLmUPovHxjBc6EE84Fh5e2Q6H9MAhN/c1i/fy8H42s587HoCb/ufPv8+fy58CwVFICAgICCUEl6uqSuvp/9s67V56v28y/rUtiLul02WtwSTBQFhGoCAgLCPyZL0FWGyzAUBAQEB4Sj2QtJXhL0wFwQEBASEUoLJkvQVYbLMBQEBAQGhlGCyJH1FmCxzQUBAQEA4ir2Q9BVhL8wFAQEBAaGUYLIkfUWYLHNBQEBAQDiKvZD0FWEvzAUBAQEBoZRgsiR9RZgsc0FAQEBAKCWYLElfEffr/o13eeFvJsu52Z+4giIQEBAQEI7SthdmUlAEQpI8AdtyQH1RflI0AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIzLTA0LTA1VDIxOjQyOjUwKzAwOjAwZuGrtQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMy0wNC0wNVQyMTo0Mjo1MCswMDowMBe8EwkAAAA9dEVYdGljYzpjb3B5cmlnaHQAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5jLiwgYWxsIHJpZ2h0cyByZXNlcnZlZC6eZtwpAAAAI3RFWHRpY2M6ZGVzY3JpcHRpb24AR2VuZXJpYyBSR0IgUHJvZmlsZRqnOI4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">20\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">2</td>\n      <td align=\"left\">Sodium\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 167 (77.3)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 180 &le; 340</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 65 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">15 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPCAQAAABLlYPgAAAAAmJLR0QA/4ePzL8AAAAHdElNRQfnBAUVKjK4mitbAAAA8UlEQVR42u3aQQrCMBBAUSO9o3fQ89Q7eErdjosMUlOSP/y/E6H1QaRD0va+VO06+wdIkxbb4oc2/PJ7+ld+DL9hvN12+Co/dut+8zr5zoUXpDRi0ohJIyaNmDRi0ohJIyaNmDRi0ohJIyaNmDRihWkDjjP2RQ9Wh5zUzDuNySq8IKURk0ZMGrHCtNNfrsjK5pj/3ymZSjt3iim8IKURk0ZMGrHCtK9H9qq7HANo/fngtej+R1bhBSmNmDRi0ogVpk3dQMg6OBmFHZVladn005+ZYoUXpDRi0ohJI1aY1uJD/4nfG7mHaaThNd0KL0hpxD7v2xZqLL5N4gAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wNC0wNVQyMTo0Mjo1MCswMDowMGbhq7UAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDQtMDVUMjE6NDI6NTArMDA6MDAXvBMJAAAAPXRFWHRpY2M6Y29weXJpZ2h0AENvcHlyaWdodCAyMDA3IEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQunmbcKQAAACN0RVh0aWNjOmRlc2NyaXB0aW9uAEdlbmVyaWMgUkdCIFByb2ZpbGUapziOAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">20\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">3</td>\n      <td align=\"left\">Sugar\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 8.8 (5.3)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 9.5 &le; 18</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 8.5 (0.6)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">15 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPCAQAAABLlYPgAAAAAmJLR0QA/4ePzL8AAAAHdElNRQfnBAUVKjK4mitbAAAA0ElEQVR42u3bQQ6CMBBA0db0jtxBzwN38JS4HRcuJk2RP/l/Z8DCS8pm0H62qj3+fQPSpMVG/HCkH7xXz5y9L16/tXiB8X1oSy30zt7p8vVjhTekNGLSiEkjJo2YNGLSiEkjJo2YNGLSiEkjJo2YNGKFaWPu6/l3LxjalW9eshXekNKISSMmjZg0YtKISSMmjZg0YoVpkwOE1aVnL+FXrzenzcxeCm9IacSkEZNGTBoxacSkEZNGTBqxwrQehw/5f/jerWeYjXS85meFN6Q0Yh9MnhHO80+dTwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wNC0wNVQyMTo0Mjo1MCswMDowMGbhq7UAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDQtMDVUMjE6NDI6NTArMDA6MDAXvBMJAAAAPXRFWHRpY2M6Y29weXJpZ2h0AENvcHlyaWdodCAyMDA3IEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQunmbcKQAAACN0RVh0aWNjOmRlc2NyaXB0aW9uAEdlbmVyaWMgUkdCIFByb2ZpbGUapziOAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">20\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">4</td>\n      <td align=\"left\">Type\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. Adult</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Child</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">10</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">50.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">10</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">50.0%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAEEAAAAoCAQAAAALBV9cAAAAAmJLR0QA/4ePzL8AAAAHdElNRQfnBAUVKjK4mitbAAAAc0lEQVRYw+3WMQ6AMAiF4Yfxjt7B++gdekodXLBJB2sCDP/bWOiX0ATsUnaWbACEJ6svzrCPsduAIG0hgPaqCgwCAgQIECAUJXRrqs11+RXz+9mm23yNf7XaII64W5aTpQsECBAgQChKqHay5KTAICBI0g2Vfgs+mgJKWgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wNC0wNVQyMTo0Mjo1MCswMDowMGbhq7UAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDQtMDVUMjE6NDI6NTArMDA6MDAXvBMJAAAAPXRFWHRpY2M6Y29weXJpZ2h0AENvcHlyaWdodCAyMDA3IEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQunmbcKQAAACN0RVh0aWNjOmRlc2NyaXB0aW9uAEdlbmVyaWMgUkdCIFByb2ZpbGUapziOAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">20\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.2)<br/>2023-04-05</p>\n</div>\n```\n:::\n:::\n\n\n\n## Tidy Data (as needed)\n\nI grouped the data by sodium and sugar. Initially, I did not think that the Type was a helpful data point, but I included it later in the bivariate visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal%>%\n  group_by(Cereal)%>%\n  select(Sodium, Sugar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 3\n# Groups:   Cereal [20]\n   Cereal                Sodium Sugar\n   <chr>                  <dbl> <dbl>\n 1 Frosted Mini Wheats        0    11\n 2 Raisin Bran              340    18\n 3 All Bran                  70     5\n 4 Apple Jacks              140    14\n 5 Captain Crunch           200    12\n 6 Cheerios                 180     1\n 7 Cinnamon Toast Crunch    210    10\n 8 Crackling Oat Bran       150    16\n 9 Fiber One                100     0\n10 Frosted Flakes           130    12\n11 Froot Loops              140    14\n12 Honey Bunches of Oats    180     7\n13 Honey Nut Cheerios       190     9\n14 Life                     160     6\n15 Rice Krispies            290     3\n16 Honey Smacks              50    15\n17 Special K                220     4\n18 Wheaties                 180     4\n19 Corn Flakes              200     3\n20 Honeycomb                210    11\n```\n:::\n:::\n\n\n\n## Univariate Visualizations\n\nI created bins for sugar. I decided 2mg bins we're probably the best visualization since all of them contained around less than 20mgs of sugar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbins_sugar<- round((max(cereal$Sugar) - min(cereal$Sugar))/2)\nbins_sugar\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n\n```{.r .cell-code}\nggplot(cereal, aes(x= Sugar))+\n  geom_histogram(bins = bins_sugar)\n```\n\n::: {.cell-output-display}\n![](Keith_Challenge_5_Redo_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nI included 25mg bins for the sodium because the range was larger and most we're over 100mgs. As you can see the majority of the cereals we're high in both sodium and sugar. Later, I will use a bivariate box plot to determine if there are any patterns between adult cereal and childrens cereal. \n\n::: {.cell}\n\n```{.r .cell-code}\nbins_sodium<- round((max(cereal$Sodium) - min(cereal$Sodium))/25)\nbins_sodium\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14\n```\n:::\n\n```{.r .cell-code}\nggplot(cereal, aes(x= Sodium))+\n  geom_histogram(bins = bins_sodium)\n```\n\n::: {.cell-output-display}\n![](Keith_Challenge_5_Redo_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Bivariate Visualization(s)\n\nAs you can see on the below box chart, the average amount of sugar in children cereal is higher than that of adult cereal, but the adult cereal cover a larger range. However, it would be interesting to know how these cereals were categorized and what constitutes an adult/child cereal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cereal, aes(Type, Sugar)) +\n  geom_boxplot()+\n  labs(title = \"Sugar by Type\")\n```\n\n::: {.cell-output-display}\n![](Keith_Challenge_5_Redo_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nI have included the bivariate scatter plot to see if there was any clear correlation. It seems that there is no significant pattern between the types of cereal and their sugar/sodium amounts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cereal, aes(x=Sugar, y=Sodium, col = Type)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Keith_Challenge_5_Redo_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n###Outlier Function\n\nis_outlier <- function(x) {\n  return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))\n}\n```\n:::\n\nI borrowed this outlier function from the solutions as it will be very helpful for similar types of analysis. When integrated into a scatter-plot, it specifies which are upper and lower outliers. As you can see from the below plots, Raisin Bran is the upper outlier and Frosted Mini-Wheats is the lower.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal%>%\n  mutate(outlier_sug=is_outlier(Sugar),\n         outlier_sod=is_outlier(Sodium),\n         outlier_lab=if_else(outlier_sug | outlier_sod, Cereal, NA_character_)) %>%\n  ggplot(aes(Sugar,Sodium))+\n  geom_point()+\n  geom_text(aes(label=outlier_lab),col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Keith_Challenge_5_Redo_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Keith_Challenge_5_Redo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}