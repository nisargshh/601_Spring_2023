{
  "hash": "412446b52ddcd75c699704cefd944b17",
  "result": {
    "markdown": "---\ntitle: \"Visualizing Cereal data\"\nauthor: \"Saksham Kumar\"\ndescription: \"Introduction to Visualization\"\ndate: \"05/03/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\n    df-print: paged\ncategories:\n  - challenge_5\n  - cereal\n  - Saksham Kumar\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggrepel)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ‚≠ê\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal <- read_csv(\"_data/cereal.csv\")\n\ncereal\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Cereal\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Sodium\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sugar\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Type\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Frosted Mini Wheats\",\"2\":\"0\",\"3\":\"11\",\"4\":\"A\"},{\"1\":\"Raisin Bran\",\"2\":\"340\",\"3\":\"18\",\"4\":\"A\"},{\"1\":\"All Bran\",\"2\":\"70\",\"3\":\"5\",\"4\":\"A\"},{\"1\":\"Apple Jacks\",\"2\":\"140\",\"3\":\"14\",\"4\":\"C\"},{\"1\":\"Captain Crunch\",\"2\":\"200\",\"3\":\"12\",\"4\":\"C\"},{\"1\":\"Cheerios\",\"2\":\"180\",\"3\":\"1\",\"4\":\"C\"},{\"1\":\"Cinnamon Toast Crunch\",\"2\":\"210\",\"3\":\"10\",\"4\":\"C\"},{\"1\":\"Crackling Oat Bran\",\"2\":\"150\",\"3\":\"16\",\"4\":\"A\"},{\"1\":\"Fiber One\",\"2\":\"100\",\"3\":\"0\",\"4\":\"A\"},{\"1\":\"Frosted Flakes\",\"2\":\"130\",\"3\":\"12\",\"4\":\"C\"},{\"1\":\"Froot Loops\",\"2\":\"140\",\"3\":\"14\",\"4\":\"C\"},{\"1\":\"Honey Bunches of Oats\",\"2\":\"180\",\"3\":\"7\",\"4\":\"A\"},{\"1\":\"Honey Nut Cheerios\",\"2\":\"190\",\"3\":\"9\",\"4\":\"C\"},{\"1\":\"Life\",\"2\":\"160\",\"3\":\"6\",\"4\":\"C\"},{\"1\":\"Rice Krispies\",\"2\":\"290\",\"3\":\"3\",\"4\":\"C\"},{\"1\":\"Honey Smacks\",\"2\":\"50\",\"3\":\"15\",\"4\":\"A\"},{\"1\":\"Special K\",\"2\":\"220\",\"3\":\"4\",\"4\":\"A\"},{\"1\":\"Wheaties\",\"2\":\"180\",\"3\":\"4\",\"4\":\"A\"},{\"1\":\"Corn Flakes\",\"2\":\"200\",\"3\":\"3\",\"4\":\"A\"},{\"1\":\"Honeycomb\",\"2\":\"210\",\"3\":\"11\",\"4\":\"C\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal %>% colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Cereal\" \"Sodium\" \"Sugar\"  \"Type\"  \n```\n:::\n:::\n\n\nThe cereal data contains 4 variables: \"Name\", Amount of \"Sodium\", Amount of \"Sugar\" and the cereal \"Type\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Cereal              Sodium          Sugar           Type          \n Length:20          Min.   :  0.0   Min.   : 0.00   Length:20         \n Class :character   1st Qu.:137.5   1st Qu.: 4.00   Class :character  \n Mode  :character   Median :180.0   Median : 9.50   Mode  :character  \n                    Mean   :167.0   Mean   : 8.75                     \n                    3rd Qu.:202.5   3rd Qu.:12.50                     \n                    Max.   :340.0   Max.   :18.00                     \n```\n:::\n:::\n\nThe above results contain general statistics about the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal$Type %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"A\" \"C\"\n```\n:::\n:::\n\n\nThere are only two types of cereal, A and C.\n\n## Tidy Data (as needed)\n\nThe data is alreadt tidy. It just needs a few additional columns to help visualize outliers.\n\nTo calculate outliers we will first create a new function that classfies the current value as an outlier\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutlier <- function(x) {\n  return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))\n}\n```\n:::\n\n\nNext we mutate the data to include two new columns. One that specifies if the cereal is an outlier in Sodium quantities. Another that specifies if the cereal is an outlier in Sugar quantities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal <- cereal %>%\n  mutate(sodium_outlier = ifelse(outlier(cereal$Sodium), cereal$Cereal, NA)) %>%\n  mutate(sugar_outlier = ifelse(outlier(cereal$Sugar), cereal$Cereal, NA))\n\ncereal\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Cereal\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Sodium\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sugar\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Type\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sodium_outlier\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sugar_outlier\"],\"name\":[6],\"type\":[\"lgl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Frosted Mini Wheats\",\"2\":\"0\",\"3\":\"11\",\"4\":\"A\",\"5\":\"Frosted Mini Wheats\",\"6\":\"NA\"},{\"1\":\"Raisin Bran\",\"2\":\"340\",\"3\":\"18\",\"4\":\"A\",\"5\":\"Raisin Bran\",\"6\":\"NA\"},{\"1\":\"All Bran\",\"2\":\"70\",\"3\":\"5\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Apple Jacks\",\"2\":\"140\",\"3\":\"14\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Captain Crunch\",\"2\":\"200\",\"3\":\"12\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Cheerios\",\"2\":\"180\",\"3\":\"1\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Cinnamon Toast Crunch\",\"2\":\"210\",\"3\":\"10\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Crackling Oat Bran\",\"2\":\"150\",\"3\":\"16\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Fiber One\",\"2\":\"100\",\"3\":\"0\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Frosted Flakes\",\"2\":\"130\",\"3\":\"12\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Froot Loops\",\"2\":\"140\",\"3\":\"14\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Honey Bunches of Oats\",\"2\":\"180\",\"3\":\"7\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Honey Nut Cheerios\",\"2\":\"190\",\"3\":\"9\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Life\",\"2\":\"160\",\"3\":\"6\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Rice Krispies\",\"2\":\"290\",\"3\":\"3\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Honey Smacks\",\"2\":\"50\",\"3\":\"15\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Special K\",\"2\":\"220\",\"3\":\"4\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Wheaties\",\"2\":\"180\",\"3\":\"4\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Corn Flakes\",\"2\":\"200\",\"3\":\"3\",\"4\":\"A\",\"5\":\"NA\",\"6\":\"NA\"},{\"1\":\"Honeycomb\",\"2\":\"210\",\"3\":\"11\",\"4\":\"C\",\"5\":\"NA\",\"6\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Univariate Visualizations\n\nFirst we plot two boxplots, one for sugar and one for sodium.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cereal, aes(x=NA, y=Sodium)) +\n  geom_boxplot() +\n  geom_text(aes(label=sodium_outlier), na.rm=TRUE, hjust=-.5)\n```\n\n::: {.cell-output-display}\n![](SakshamKumar_challenge5_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(cereal, aes(x=NA, y=Sugar)) +\n  geom_boxplot() +\n  geom_text(aes(label=sugar_outlier), na.rm=TRUE, hjust=-.5)\n```\n\n::: {.cell-output-display}\n![](SakshamKumar_challenge5_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\nWe can see that there are two Cereals that are categorized as outliers for Sodium levels: Raisin Bran and Frosted Mini Wheats. There are no outliers for Sugar levels.\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cereal, aes(Sugar, Sodium, col=Type)) + geom_point() + geom_text_repel(size=2, aes(label=Cereal))\n```\n\n::: {.cell-output-display}\n![](SakshamKumar_challenge5_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nFrom the graph we can see that there seems to be no general correlation between Sodium and Sugar levels. Type C Cereals still have a more linear relationship between Sodium and Sugar, when compared to Type A Cereals.\n\nRaisin Bran seems to have the highest Sugar and Sodium levels of all Cereals",
    "supporting": [
      "SakshamKumar_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}