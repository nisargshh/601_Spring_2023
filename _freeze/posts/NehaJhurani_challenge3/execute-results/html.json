{
  "hash": "01643d38efbc2a0c9ae02dad8dbe0ca3",
  "result": {
    "markdown": "---\ntitle: \"Tidy a dataset\"\nauthor: \"Neha Jhurani\"\ndesription: \"Using pivot_longer to tidy the dataset: eggs_tidy.csv\"\ndate: \"04/12/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge3\n  - Neha Jhurani\n  - eggs_tidy.csv\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Analysing eggs dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\n#reading eggs_tidy csv data\neggs_tidy_data <- read_csv(\"_data/eggs_tidy.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 120 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): month\ndbl (5): year, large_half_dozen, large_dozen, extra_large_half_dozen, extra_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#extracting all the column names\ncolnames(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"                  \"year\"                   \"large_half_dozen\"      \n[4] \"large_dozen\"            \"extra_large_half_dozen\" \"extra_large_dozen\"     \n```\n:::\n\n```{.r .cell-code}\n#getting the summary (minimum, 1st quartile, median, mean, 3rd quartile, maximum, number of NA's present) of each column in eggs tidy dataset\nsummary(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    month                year      large_half_dozen  large_dozen   \n Length:120         Min.   :2004   Min.   :126.0    Min.   :225.0  \n Class :character   1st Qu.:2006   1st Qu.:129.4    1st Qu.:233.5  \n Mode  :character   Median :2008   Median :174.5    Median :267.5  \n                    Mean   :2008   Mean   :155.2    Mean   :254.2  \n                    3rd Qu.:2011   3rd Qu.:174.5    3rd Qu.:268.0  \n                    Max.   :2013   Max.   :178.0    Max.   :277.5  \n extra_large_half_dozen extra_large_dozen\n Min.   :132.0          Min.   :230.0    \n 1st Qu.:135.8          1st Qu.:241.5    \n Median :185.5          Median :285.5    \n Mean   :164.2          Mean   :266.8    \n 3rd Qu.:185.5          3rd Qu.:285.5    \n Max.   :188.1          Max.   :290.0    \n```\n:::\n\n```{.r .cell-code}\n#Note: There are no NA's present in any column (confirmed from above result)\n\ndim(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120   6\n```\n:::\n\n```{.r .cell-code}\n# The dataset contains 120 rows and 6 columns\n\nhead(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  month     year large_half_dozen large_dozen extra_large_half_dozen extra_lar…¹\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>       <dbl>\n1 January   2004             126         230                    132         230 \n2 February  2004             128.        226.                   134.        230 \n3 March     2004             131         225                    137         230 \n4 April     2004             131         225                    137         234.\n5 May       2004             131         225                    137         236 \n6 June      2004             134.        231.                   137         241 \n# … with abbreviated variable name ¹​extra_large_dozen\n```\n:::\n\n```{.r .cell-code}\n#We see that the dataset contains monthly data for ten years, i.e., from Jan 2004 to Dec 2013. It stores the average volumne of 6 different types of cartons of eggs. We know that the values are average because a unit of carton is not sold partially, but we still have few decimal point values in the dataset. For example - Feb 2004 has 128.5 large half dozen sized cartons. \n\n#The following rules were explained for the data to be 'tidy'.\n# 1. Each variable must have it's own column\n# 2. Each observation must have it's own row.\n# 3. Each value must have it's own cell.\n\n# Analysis - The four data points stored in the dataset are a) month, b) year, c) carton_type, and d) units. We see that each of the variables have their own column, but against rule 2, the dataset includes columns which represent observations, i.e., large half dozen, large dozen, extra large half dozen and extra large dozen will no longer have it's own individual column. To do this, we will introduce a column name as 'carton_type' which will hold the info regarding the carton and we will store it's respective average value under 'units' column\n\n#eggs dataset will be made 'Tidy' by pivoting it to have more rows and fewer columns. The columns that needs to be pivoted are - large half dozen, large dozen, extra large half dozen and extra large dozen, they will become rows for the corresponding month and year of obeservation. We will use tidyverse function, pivot_longer to accomplish this\n\npivoted_eggs_tidy_data <- eggs_tidy_data %>%\n  pivot_longer(\n    cols = ends_with(\"dozen\"),\n    names_to = \"carton_type\",\n    values_to = \"units\")\n\nview(pivoted_eggs_tidy_data)\n\ndim(pivoted_eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480   4\n```\n:::\n\n```{.r .cell-code}\n# The dataset contains 480 rows and 4 columns\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}