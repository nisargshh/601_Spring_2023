{
  "hash": "9ca3cb2f35de9b2fd12a50a20a6a5049",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 Instructions\"\nauthor: \"Aditya Salveru\"\ndesription: \"Data wrangling: using group() and summarise()\"\ndate: \"04/22/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - railroads\n  - faostat\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# \nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, available in the `posts/_data` folder, using the correct R package and command.\n\n-   railroad\\*.csv or StateCounty2012.xls ⭐\n-   FAOstat\\*.csv or birds.csv ⭐⭐⭐\n-   hotel_bookings.csv ⭐⭐⭐⭐\n\n\nWe are reading the railroad data\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad <- read.csv(\"_data/railroad_2012_clean_county.csv\")\nhead(railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state               county total_employees\n1    AE                  APO               2\n2    AK            ANCHORAGE               7\n3    AK FAIRBANKS NORTH STAR               2\n4    AK               JUNEAU               3\n5    AK    MATANUSKA-SUSITNA               2\n6    AK                SITKA               1\n```\n:::\n:::\n\n\nAdd any comments or documentation as needed. More challenging data may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2930    3\n```\n:::\n\n```{.r .cell-code}\nstr(railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t2930 obs. of  3 variables:\n $ state          : chr  \"AE\" \"AK\" \"AK\" \"AK\" ...\n $ county         : chr  \"APO\" \"ANCHORAGE\" \"FAIRBANKS NORTH STAR\" \"JUNEAU\" ...\n $ total_employees: int  2 7 2 3 2 1 88 102 143 1 ...\n```\n:::\n:::\n\n\nThe dataset contains 2930 rows with three columns. \n\nThe three columns are 'state', 'county' and 'total_employees'\n\n## Provide Grouped Summary Statistics\n\nConduct some exploratory data analysis, using dplyr commands such as `group_by()`, `select()`, `filter()`, and `summarise()`. Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\nTotal employees per state state:\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_wise = select(railroad, state, total_employees)\nstate_wise %>% \n  group_by(state) %>%\n  summarize(totalEmployees=sum(total_employees))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 2\n   state totalEmployees\n   <chr>          <int>\n 1 AE                 2\n 2 AK               103\n 3 AL              4257\n 4 AP                 1\n 5 AR              3871\n 6 AZ              3153\n 7 CA             13137\n 8 CO              3650\n 9 CT              2592\n10 DC               279\n# ℹ 43 more rows\n```\n:::\n:::\n\n\n\nMedian number per county in every state:\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_wise = select(railroad, state, total_employees)\nstate_wise %>% \n  group_by(state) %>%\n  summarize(meanEmployees=mean(total_employees),medianEmployees=median(total_employees),standardDeviation = sd(total_employees))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 4\n   state meanEmployees medianEmployees standardDeviation\n   <chr>         <dbl>           <dbl>             <dbl>\n 1 AE              2               2                NA  \n 2 AK             17.2             2.5              34.8\n 3 AL             63.5            26               130. \n 4 AP              1               1                NA  \n 5 AR             53.8            16.5             131. \n 6 AZ            210.             94               228. \n 7 CA            239.             61               549. \n 8 CO             64.0            10               128. \n 9 CT            324             125               520. \n10 DC            279             279                NA  \n# ℹ 43 more rows\n```\n:::\n:::\n\n\nState wise employees in the descending order:\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_wise_grouped <- state_wise %>% \n  group_by(state) %>%\n  summarize(Sum = sum(total_employees))\n\nsorted <- state_wise_grouped %>%\n  arrange(desc(Sum))\n\nsorted\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 2\n   state   Sum\n   <chr> <int>\n 1 TX    19839\n 2 IL    19131\n 3 NY    17050\n 4 NE    13176\n 5 CA    13137\n 6 PA    12769\n 7 OH     9056\n 8 GA     8605\n 9 IN     8537\n10 MO     8419\n# ℹ 43 more rows\n```\n:::\n:::\n\n\n### Explain and Interpret\n\nBe sure to explain why you choose a specific group. Comment on the interpretation of any interesting differences between groups that you uncover. This section can be integrated with the exploratory data analysis, just be sure it is included.\n\n\nWe have grouped the total_employees state wise, i.e. we have computed the metrics mean,median and total of all the counties for different states.\n\nWe can see that there are few states with only 1 county, therefore the standard deviation is 0(NA). \nUpon sorting based on the total number of employees, we can see that TX and IL have the highest number of employees whereas AP has only 1 employee.\n\n",
    "supporting": [
      "AdityaSalveru_Challenge2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}