{
  "hash": "a2acf7c95cb28b7db5f820d0a426129d",
  "result": {
    "markdown": "---\ntitle: \"Challenge_4\"\nauthor: \"Xinyang Mao\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"04/03/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - fed_rates\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(readxl)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\n-   FedFundsRate.csv⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfedRateData <- read.csv(\"_data/FedFundsRate.csv\")\nhead(fedRateData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Year Month Day Federal.Funds.Target.Rate Federal.Funds.Upper.Target\n1 1954     7   1                        NA                         NA\n2 1954     8   1                        NA                         NA\n3 1954     9   1                        NA                         NA\n4 1954    10   1                        NA                         NA\n5 1954    11   1                        NA                         NA\n6 1954    12   1                        NA                         NA\n  Federal.Funds.Lower.Target Effective.Federal.Funds.Rate\n1                         NA                         0.80\n2                         NA                         1.22\n3                         NA                         1.06\n4                         NA                         0.85\n5                         NA                         0.83\n6                         NA                         1.28\n  Real.GDP..Percent.Change. Unemployment.Rate Inflation.Rate\n1                       4.6               5.8             NA\n2                        NA               6.0             NA\n3                        NA               6.1             NA\n4                       8.0               5.7             NA\n5                        NA               5.3             NA\n6                        NA               5.0             NA\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(summarytools::dfSummary(fedRateData,\n                        varnumbers = FALSE,\n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, \n                        valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>fedRateData</h4>\n<strong>Dimensions</strong>: 904 x 10\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">Year\n[integer]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1986.7 (17.2)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1954 &le; 1987.5 &le; 2017</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 28 (0)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">64 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAIdJREFUWMPt1W0KgCAMBmCPUJ2g7Abt/ndrskQDQzckyN73jx/0MFFM58bP/BDPKc1PFbcTHXB93MJnYHJEBFdzYXc3i+PRO04WqHcCvuTS30bn0u42ulDI4rIGrq+To89cuJj3FJ2UzF3hEzg4ODi4QZw8B3p3zbQ5rrFaHPfg/u28MtGNnBMKdOtreLlQwgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wNC0wM1QwNjozMDoyNyswMDowMEvB8o0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDA6nEoxAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Month\n[integer]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 6.6 (3.5)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1 &le; 7 &le; 12</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 6 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">12 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAHhJREFUWMPt1VEKgCAQRVGXUK6gdAfN/vdWMzhCCmH9BHIfCIO8I/NnCPMnXdnX8SzFZRHB4XA4HO4Pp3/X9sFpd8xF/x5taJ3epW4ji5Rnow6t03PUum9kt+LPPjobfKPqbkPnvF4bg65r4HA4HA6Ha116GXcz5wRiPdU5+m0ICAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wNC0wM1QwNjozMDoyNyswMDowMEvB8o0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDA6nEoxAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Day\n[integer]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3.6 (6.8)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1 &le; 1 &le; 31</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0 (1.9)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">29 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAEdJREFUWMPt17ENACAIBVFG0A30OwL772aBEltbclcQmkePWf0kzf5RO26543A4HA6Hw+FwOBwOV8TFd5zzLa/Gfp0+G1a/DRuzB6mhir3lAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwS8HyjQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMy0wNC0wM1QwNjozMDoyNyswMDowMDqcSjEAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Federal.Funds.Target.Rate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 5.7 (2.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1 &le; 5.5 &le; 11.5</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 4 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">63 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAIpJREFUWMPt1sENgCAMBVBGECfQuoHsv5uUhIN8SaAmGMn/p0r61PQAODd/fJlVYnZfy1J1IYaOjo6Ojm5uB6dkozvKrl86vCQ0Ovj4o9O3i8Hpw/mFy+PodXl1pIPhgksd4GBI4FKHWosLZXEbrhhcKujo6N67vMP1Oi1GO/3XzeC0eOukM9nNnAs2ao8pUem0tgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wNC0wM1QwNjozMDoyNyswMDowMEvB8o0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDA6nEoxAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">442\n(48.9%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Federal.Funds.Upper.Target\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 0.3 (0.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.2 &le; 0.2 &le; 1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">4 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGMAAABJBAMAAADbIoX2AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAFtJREFUSMft09EJACAIBNBGqA3KNqj9d+sjBziNCuTu24cIZ0qxIniqkj7hkJC8Io4mFzzZT3SphezzBwnJNeKoJTL7hYg0K+mThOQucdQSnT8j0NeTkEQkUbIAj7MdrIhLHwEAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDBLwfKNAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwOpxKMQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">801\n(88.6%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Federal.Funds.Lower.Target\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 0.1 (0.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 0 &le; 0.8</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0 (2.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">4 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGMAAABJBAMAAADbIoX2AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAFtJREFUSMft09EJACAIBNBGqA3KNqj9d+sjBziNCuTu24cIZ0qxIniqkj7hkJC8Io4mFzzZT3SphezzBwnJNeKoJTL7hYg0K+mThOQucdQSnT8j0NeTkEQkUbIAj7MdrIhLHwEAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDBLwfKNAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwOpxKMQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">801\n(88.6%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Effective.Federal.Funds.Rate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 4.9 (3.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.1 &le; 4.7 &le; 19.1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 4.2 (0.7)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">466 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAHxJREFUWMPt18EJwCAMBVBHqJ2gjRvU/XdrFZIexEjioUX+P+Sij4CikBDWT+TsVBJH2RqXn1xwHzm5NaNLvBuudfVQHS5LgYODg4PzufIBnw5XiteR1lRxSWsKBwf3X9d79CPXawo34Uhic+/ijKsT8GFzMimwI2PYrZwbLS6QijvliaoAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDBLwfKNAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwOpxKMQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">152\n(16.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Real.GDP..Percent.Change.\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3.1 (3.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">-10 &le; 3.1 &le; 16.5</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 3.5 (1.1)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">113 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAF5JREFUWMPt1rENwCAMBVGPEDaAZAT23w2hxI3FF6G17hoantxYCLP8ldD91cq6S7inv+FwOBwOh8Phcjj1L9w5NReHm/lenbp4H4dbObVffsZ3zZ26r+bGeX+rlr8BeFFbGGuHQ68AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDBLwfKNAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwOpxKMQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">654\n(72.3%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Unemployment.Rate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 6 (1.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3.4 &le; 5.7 &le; 10.8</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.1 (0.3)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">71 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAJ1JREFUWMPt1dsNgCAMBVBGkA0UR2D/3SRpqMijUDUkQO//SXmUotT80c8YYw5NZcu701pxqznXLK+cQ+JWc9AsfAdInLghXOkDrblS4X8cPj6mQzSWIz4m0hENELjwMDkuRAM5enCXHf2gxNnsqGhw2ZLivrj0KtpcSr2LhkSVeldF0UaZDksyHZbs52CpfAcluzq31P2+d1a8mzkX4o10HOx8OGQAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDBLwfKNAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwOpxKMQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">152\n(16.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Inflation.Rate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3.7 (2.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.6 &le; 2.8 &le; 13.6</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.7 (0.7)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">106 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wQDBh4begkCNQAAAJFJREFUWMPt1cENgCAMBVBGECfQugHdfzdT4SCKtHChkv5Lg/EFkRKcmz/+ygoAu5dkyR0imvupo03vcojBnDlz5syNcILruuz4ac1pdSC6rt/uELWbOf2uduyrrjKtGse096djfusoF5fT7uJrahwto8fRKONtLhWZo2NBo1RkLrXb7WH8VM6VSnjse0s2N39O3CRVDOTy3YUAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDQtMDNUMDY6MzA6MjcrMDA6MDBLwfKNAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA0LTAzVDA2OjMwOjI3KzAwOjAwOpxKMQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">194\n(21.5%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.2)<br/>2023-04-03</p>\n</div>\n```\n:::\n:::\n\n\n\n## Modify date\nAs we can see,there are 3 separate date columns: Year,Month,Day.We can use add a extra column named `Date` to combine them as a new column then delete the original 3 separate columns.\n\nFirstly,we use `mutate()` and `make_date()` functions to create a new column:\n\n::: {.cell}\n\n```{.r .cell-code}\nfedRateRaw <- fedRateData%>%\n  mutate(Date = make_date(year = `Year`,month = `Month`,day = `Day`))\n\nsummary(fedRateRaw$Date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"1954-07-01\" \"1973-04-23\" \"1987-12-16\" \"1987-02-25\" \"2001-06-07\" \"2017-03-16\" \n```\n:::\n:::\n\n## Delete previous columns\nDelete previous separate 3 date columns.\n`subset()` used to reserve the useful columns,and store the columns names which need to delete in a character type vector.\n\n::: {.cell}\n\n```{.r .cell-code}\nfedRateRaw <- fedRateRaw %>%\n  subset(select = -c(`Year`,`Month`,`Day`))\ncolnames(fedRateRaw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Federal.Funds.Target.Rate\"    \"Federal.Funds.Upper.Target\"  \n[3] \"Federal.Funds.Lower.Target\"   \"Effective.Federal.Funds.Rate\"\n[5] \"Real.GDP..Percent.Change.\"    \"Unemployment.Rate\"           \n[7] \"Inflation.Rate\"               \"Date\"                        \n```\n:::\n:::\n\n## Sanity check\n\nUse the `colSums()` function and the is.na() function: this method calculates the number of missing values in each column and returns a vector of numbers where each element represents the number of missing values in the corresponding column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolHasNa <- colSums(is.na(fedRateRaw)) > 0\n\ncolHasNa\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Federal.Funds.Target.Rate   Federal.Funds.Upper.Target \n                        TRUE                         TRUE \n  Federal.Funds.Lower.Target Effective.Federal.Funds.Rate \n                        TRUE                         TRUE \n   Real.GDP..Percent.Change.            Unemployment.Rate \n                        TRUE                         TRUE \n              Inflation.Rate                         Date \n                        TRUE                        FALSE \n```\n:::\n:::\n\nAn element in the `colHasNa` vector is TRUE for a missing value in the corresponding column, and FALSE for no missing value in the corresponding column.\n\n## Use average value to fill in the missing values\n\nAccording to the check result above,we can find there are lots of missing value and all them are numeric type value.\nSo I use the average value of every column except `Date` column to fill the missing cell.\nMainly use `for` loop and `mean()` function to calculate mean and fill,`ifelse()` and `is.na()` to determine.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolsToFill <- c(1:7)\nfor (i in colsToFill) {\n  avg <- mean(fedRateRaw[,i],na.rm = TRUE)\n  fedRateRaw[,i] <- ifelse(is.na(fedRateRaw[,i]),avg,fedRateRaw[,i])\n}\n\ncolCheckNa <- colSums(is.na(fedRateRaw)) > 0\n\ncolCheckNa\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Federal.Funds.Target.Rate   Federal.Funds.Upper.Target \n                       FALSE                        FALSE \n  Federal.Funds.Lower.Target Effective.Federal.Funds.Rate \n                       FALSE                        FALSE \n   Real.GDP..Percent.Change.            Unemployment.Rate \n                       FALSE                        FALSE \n              Inflation.Rate                         Date \n                       FALSE                        FALSE \n```\n:::\n:::\n\nNow we check again,all of the missing values disappered!\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}