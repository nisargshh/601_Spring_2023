{
  "hash": "e014d5c87b822d6a3a88a5d0e3eb9552",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Submission\"\nauthor: \"Cam Needels\"\ndescription: \"Introduction to Visualization\"\ndate: \"03/29/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - cereal\n  - CamNeedels\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(summarytools)\nlibrary(car)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal <- read_csv(\"B:/Needels/Documents/DACCS 601/DACSS_601_New/posts/_data/cereal.csv\")\ncereal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   Cereal                Sodium Sugar Type \n   <chr>                  <dbl> <dbl> <chr>\n 1 Frosted Mini Wheats        0    11 A    \n 2 Raisin Bran              340    18 A    \n 3 All Bran                  70     5 A    \n 4 Apple Jacks              140    14 C    \n 5 Captain Crunch           200    12 C    \n 6 Cheerios                 180     1 C    \n 7 Cinnamon Toast Crunch    210    10 C    \n 8 Crackling Oat Bran       150    16 A    \n 9 Fiber One                100     0 A    \n10 Frosted Flakes           130    12 C    \n11 Froot Loops              140    14 C    \n12 Honey Bunches of Oats    180     7 A    \n13 Honey Nut Cheerios       190     9 C    \n14 Life                     160     6 C    \n15 Rice Krispies            290     3 C    \n16 Honey Smacks              50    15 A    \n17 Special K                220     4 A    \n18 Wheaties                 180     4 A    \n19 Corn Flakes              200     3 A    \n20 Honeycomb                210    11 C    \n```\n:::\n:::\n\n\n### Briefly describe the data\nThis is data about 20 different cereals with the amount of sodium and sugar allocated in each one.They're also separated by the fact they are either type A or type C cereal. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#i heard in class people were having a tough time with sodium not being numeric so I did this in case\ncereal%>%\n  mutate(Sodium = as.numeric(Sodium))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   Cereal                Sodium Sugar Type \n   <chr>                  <dbl> <dbl> <chr>\n 1 Frosted Mini Wheats        0    11 A    \n 2 Raisin Bran              340    18 A    \n 3 All Bran                  70     5 A    \n 4 Apple Jacks              140    14 C    \n 5 Captain Crunch           200    12 C    \n 6 Cheerios                 180     1 C    \n 7 Cinnamon Toast Crunch    210    10 C    \n 8 Crackling Oat Bran       150    16 A    \n 9 Fiber One                100     0 A    \n10 Frosted Flakes           130    12 C    \n11 Froot Loops              140    14 C    \n12 Honey Bunches of Oats    180     7 A    \n13 Honey Nut Cheerios       190     9 C    \n14 Life                     160     6 C    \n15 Rice Krispies            290     3 C    \n16 Honey Smacks              50    15 A    \n17 Special K                220     4 A    \n18 Wheaties                 180     4 A    \n19 Corn Flakes              200     3 A    \n20 Honeycomb                210    11 C    \n```\n:::\n:::\n\n\n## Univariate Visualizations\nI went with the bar graph for sodium because there are multiple different cereals with certain amount of sodium if they are rounded properly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#I originally made this without chunking into 25 but after seeing the solution it makes way more sense and is way easier to observe. This is essentially rounding the maximum of the sodium. I also added a title and made the y variable more clear by renaming it\nsodiumbins <- (round((max(cereal$Sodium))- min(cereal$Sodium))/25)\n\n\nggplot(cereal, aes(x=Sodium)) + geom_histogram(bins= sodiumbins) +labs(title = \"Sodium Graph\", y=\"Amount of cereals\")\n```\n\n::: {.cell-output-display}\n![](CamNeedels_challenge5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#this is a boxplot with sugar and sodium on x and y respectively. I also added a title to make it clearer\nggplot(cereal, aes(x=Sugar, y=Sodium)) + geom_boxplot() + labs(title = \"Sugar/Sodium Boxplot\")\n```\n\n::: {.cell-output-display}\n![](CamNeedels_challenge5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#this is a histogram that focuses on sugar only and i also added a title to this as well.\nggplot(cereal, aes(x=Sugar)) + geom_histogram() + labs(title = \"Sugar Graph\", y=\"Amount of cereals\")\n```\n\n::: {.cell-output-display}\n![](CamNeedels_challenge5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization(s)\n\nI chose this visualization because you can see where each individual cereal lies and you can see both their sodium and sugar easily. It also clearly shows the outliers and makes it easy to analyze. I did it for sugar too but it made a little less sense but it still gets the job done.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#We create a point graph with X axis being sugar and Y being sodium and making the column either type A or type C so we can see the different colored dots on the graph.\nggplot(cereal, aes(x=Sugar, y=Sodium, col=Type)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](CamNeedels_challenge5_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "CamNeedels_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}