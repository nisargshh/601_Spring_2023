{
  "hash": "de095bb70917cf3e2c084189c9dbfede",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"PoChun Yang\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"03/07/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - PoChunYang\n  - eggs\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\n-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐\n\nWhen I use the read_excel data, it is not tidy for people to read. Therefore, I try my best to clean it. Finally the data would look like egg_tidy.csv. First of all, I skip the 4 columns. Then, I create one \"date\" row to copy the month data. Next, I used select to choose the data which I want. Moreover, use rename to let people easier read the data and  more comfortable for using Pivot in the next part. Finally, category for the year and some strange data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_excel(\"_data/organiceggpoultry.xls\", sheet = \"Data\",skip=4)\n```\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\nThe data want to show the egg quality and chicken meat with price from 2004 to 2013 in USDA-certified organic eggs. In the Data, it give four different types of chicken and 5 different types of chicken part with the price per pound.\n\nFirst of all, I skip the 4 columns. Then, I create one \"date\" row to copy the month data. Next, I used select to choose the data which I want. Moreover, use rename to let people easier read the data and  more comfortable for using Pivot in the next part. Finally, category for the year and some strange data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2<-df%>%\n  mutate(date=...1)%>%\n  select(12,2:5)\ndf2<-df2%>%\n  rename(xlarge_dozen=2,xlarge_halfdozen=3,large_dozen=4,large_halfdozen=5)\ndf2<-df2%>%\n  mutate(date=str_remove(date,\" /1\"))\negg<-df2%>%\n  separate(date, into=c(\"month\",\"year\"),sep=\" \")%>%\n  fill(year)\negg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month     year  xlarge_dozen xlarge_halfdozen large_dozen large_halfdozen\n   <chr>     <chr>        <dbl>            <dbl>       <dbl>           <dbl>\n 1 Jan       2004          230              132         230             126 \n 2 February  2004          230              134.        226.            128.\n 3 March     2004          230              137         225             131 \n 4 April     2004          234.             137         225             131 \n 5 May       2004          236              137         225             131 \n 6 June      2004          241              137         231.            134.\n 7 July      2004          241              137         234.            134.\n 8 August    2004          241              137         234.            134.\n 9 September 2004          241              136.        234.            130.\n10 October   2004          241              136.        234.            128.\n# … with 110 more rows\n```\n:::\n:::\n\n\n## Anticipate the End Result\nI made the data become a tidy data. Then, I want to get the 2004 of the data.\n\n::: {.cell}\n\n```{.r .cell-code}\negg_data2004<- filter(egg,year == \"2004\",)\negg_data2004\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 6\n   month     year  xlarge_dozen xlarge_halfdozen large_dozen large_halfdozen\n   <chr>     <chr>        <dbl>            <dbl>       <dbl>           <dbl>\n 1 Jan       2004          230              132         230             126 \n 2 February  2004          230              134.        226.            128.\n 3 March     2004          230              137         225             131 \n 4 April     2004          234.             137         225             131 \n 5 May       2004          236              137         225             131 \n 6 June      2004          241              137         231.            134.\n 7 July      2004          241              137         234.            134.\n 8 August    2004          241              137         234.            134.\n 9 September 2004          241              136.        234.            130.\n10 October   2004          241              136.        234.            128.\n11 November  2004          241              136.        234.            128.\n12 December  2004          241              136.        234.            128.\n```\n:::\n:::\n\n\nI want to compare each 4 types of eggs in January from 2004 to 2013. Finally, I want to compare the large dozen. It is clearly seen that we get the lowest price in 2004. Besides that, the price increased generally. It could make me understand that the commodity prices rising every year. \n\n\n::: {.cell}\n\n```{.r .cell-code}\negg_Jan<-filter(egg,month == \"Jan\")\nselect(egg_Jan,1:2,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   month year  large_dozen\n   <chr> <chr>       <dbl>\n 1 Jan   2004         230 \n 2 Jan   2005         234.\n 3 Jan   2006         234.\n 4 Jan   2007         234.\n 5 Jan   2008         237 \n 6 Jan   2009         278.\n 7 Jan   2010         272.\n 8 Jan   2011         268.\n 9 Jan   2012         268.\n10 Jan   2013         268.\n```\n:::\n\n```{.r .cell-code}\nggplot(egg_Jan,aes(year,large_dozen)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](PoChunYang_Challenge3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n## Pivot the Data\n\nI used the Pivot to get the different types of the data with their cost. In col, there are large spelling in four of the types. Thus, we could use the for the type of the egg. \n\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\npivot_longer(egg, col= contains(\"large\"),\n              names_to=\"type_of_egg\",\n              values_to = \"cost\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month    year  type_of_egg       cost\n   <chr>    <chr> <chr>            <dbl>\n 1 Jan      2004  xlarge_dozen      230 \n 2 Jan      2004  xlarge_halfdozen  132 \n 3 Jan      2004  large_dozen       230 \n 4 Jan      2004  large_halfdozen   126 \n 5 February 2004  xlarge_dozen      230 \n 6 February 2004  xlarge_halfdozen  134.\n 7 February 2004  large_dozen       226.\n 8 February 2004  large_halfdozen   128.\n 9 March    2004  xlarge_dozen      230 \n10 March    2004  xlarge_halfdozen  137 \n# … with 470 more rows\n```\n:::\n:::\n",
    "supporting": [
      "PoChunYang_Challenge3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}