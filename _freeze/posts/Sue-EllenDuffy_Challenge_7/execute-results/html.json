{
  "hash": "69bb2de657fe3577aa8792be03053cdf",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7 AirBnB Data with Modified Maps\"\nauthor: \"Sue-Ellen Duffy\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"04/17/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - air_bnb\n  - Sue-Ellen Duffy\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(treemap)\nlibrary(treemapify)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## AirBnB Listing Data in New York City 2019\n\nThis dataset shows AirBnB listings in NYC in 2019 with 48,895 rows (listings) and 17 columns (data for each listing). We see different types of observations including NYC neighborhood and neighborhood group, type of rental (entire home, private room, shared room), their prices, the minimum required number of nights, and number of guest reviews. Additionally we can see how many listing each host has on AirBnB, how many days a listing was available throughout 2019, and the date of the last guest review.\n\n## Read in the Data\n\nI chose not to pivot this data because each listing was unique, even if a host had different listings, each had different price points, neighborhoods, room types, and names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydata <- read.csv(\"_data/AB_NYC_2019.csv\", na.strings=c('','  ','   '))\ntibble(mydata, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 17\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <int> <chr>       <int> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <int>\n 1  2539 \"Clean &…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 \"Skylit …    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 \"THE VIL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 \"Cozy En…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 \"Entire …    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 \"Large C…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 \"BlissAr…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 \"Large F…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 \"Cozy Cl…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 \"Cute & …    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 7 more variables: minimum_nights <int>,\n#   number_of_reviews <int>, last_review <chr>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <int>, availability_365 <int>, `10` <dbl>,\n#   and abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\n## Date Tidying\n\nThe date was originally characters, I used transform and as.date to mutate last_review into date format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydata <- transform(mydata, last_review=as.Date(last_review))\n```\n:::\n\n\n## Visualization with Multiple Dimensions\n\nIn this series of graphs I was intentional about matching colors in neighborhood groups. I believe this will give the reader an easier time making connections between neighborhood groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mydata, aes(longitude, latitude, color = neighbourhood_group), group = neighbourhood_group) + geom_point() +\n  labs (size = \"Price of Property\", color = \"NYC Neighborhoods\", title = \"NYC AirBnB by Neighborhood Groups\")\n```\n\n::: {.cell-output-display}\n![](Sue-EllenDuffy_Challenge_7_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe above map gives us an overview of where the units are mapped, and below we can see that while, Brooklyn and Manhattan have similar amounts of Airbnb units, Staten island and Bronx have very few comparatively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydata %>%\n  count(neighbourhood_group) %>%\n  ggplot(aes(area= n, fill= neighbourhood_group, label = neighbourhood_group)) + \n  geom_treemap() + \n  labs(title = \"Airbnb Units by Neighborhood Group\") + \n  scale_fill_discrete(name = \"Neighborhood Group\") +\n  geom_treemap_text(colour = \"black\",\n                    place = \"centre\")\n```\n\n::: {.cell-output-display}\n![](Sue-EllenDuffy_Challenge_7_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nIn order to get a better sense of the price, I removed outliers of +\\$500.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg<- ggplot(mydata, aes(neighbourhood_group, price, color = neighbourhood_group)) + geom_boxplot() + ylim(0, 500) + \n  labs (x = \"Neighbourhood Group\", y = \"Price of Property\") \nplot(gg) + labs(title = \"NYC AirBnB Property Prices (Under $500) in 2019 by Neighborhood Group\")\n```\n\n::: {.cell-output-display}\n![](Sue-EllenDuffy_Challenge_7_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Sue-EllenDuffy_Challenge_7_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\nHere we can see the average price per neighborhood group and room type, giving us an understanding of how each neighborhood group prices their units. For example we can see here that a private home in Manhattan is roughly the same price as an entire home/apt in Bronx and Staten Island.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg + facet_wrap ( ~ room_type) + labs(title = \"NYC AirBnB Property Prices (Under $500) in 2019 by Neighborhood Group and Room Type\", color = \"Neighborhood Group\" )  + theme(axis.text.x = element_text(angle = 90), plot.title = element_text(size = 9.5))\n```\n\n::: {.cell-output-display}\n![](Sue-EllenDuffy_Challenge_7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Sue-EllenDuffy_Challenge_7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}