{
  "hash": "53ae5ece310716ac4111bb45eeb390be",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4 Instructions\"\nauthor: \"Kevin Martell Luya\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"04/23/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   abc_poll.csv ⭐\n-   poultry_tidy.xlsx or organiceggpoultry.xls⭐⭐\n-   FedFundsRate.csv⭐⭐⭐\n-   hotel_bookings.csv⭐⭐⭐⭐\n-   debt_in_trillions.xlsx ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndebt <- read_xlsx(\"./_data/debt_in_trillions.xlsx\")\ndebt\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74 × 8\n   `Year and Quarter` Mortgage HE Revolvin…¹ Auto …² Credi…³ Stude…⁴ Other Total\n   <chr>                 <dbl>         <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl>\n 1 03:Q1                  4.94         0.242   0.641   0.688   0.241 0.478  7.23\n 2 03:Q2                  5.08         0.26    0.622   0.693   0.243 0.486  7.38\n 3 03:Q3                  5.18         0.269   0.684   0.693   0.249 0.477  7.56\n 4 03:Q4                  5.66         0.302   0.704   0.698   0.253 0.449  8.07\n 5 04:Q1                  5.84         0.328   0.72    0.695   0.260 0.446  8.29\n 6 04:Q2                  5.97         0.367   0.743   0.697   0.263 0.423  8.46\n 7 04:Q3                  6.21         0.426   0.751   0.706   0.33  0.41   8.83\n 8 04:Q4                  6.36         0.468   0.728   0.717   0.346 0.423  9.04\n 9 05:Q1                  6.51         0.502   0.725   0.71    0.364 0.394  9.21\n10 05:Q2                  6.70         0.528   0.774   0.717   0.374 0.402  9.49\n# … with 64 more rows, and abbreviated variable names ¹​`HE Revolving`,\n#   ²​`Auto Loan`, ³​`Credit Card`, ⁴​`Student Loan`\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data shows year and quaters and different types of loans. Regarding the first column, we can modify the year and quarter format.\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nAs data it is not tidy, there is work to be done.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(debt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Year and Quarter      Mortgage       HE Revolving      Auto Loan     \n Length:74          Min.   : 4.942   Min.   :0.2420   Min.   :0.6220  \n Class :character   1st Qu.: 8.036   1st Qu.:0.4275   1st Qu.:0.7430  \n Mode  :character   Median : 8.412   Median :0.5165   Median :0.8145  \n                    Mean   : 8.274   Mean   :0.5161   Mean   :0.9309  \n                    3rd Qu.: 9.047   3rd Qu.:0.6172   3rd Qu.:1.1515  \n                    Max.   :10.442   Max.   :0.7140   Max.   :1.4150  \n  Credit Card      Student Loan        Other            Total       \n Min.   :0.6590   Min.   :0.2407   Min.   :0.2960   Min.   : 7.231  \n 1st Qu.:0.6966   1st Qu.:0.5333   1st Qu.:0.3414   1st Qu.:11.311  \n Median :0.7375   Median :0.9088   Median :0.3921   Median :11.852  \n Mean   :0.7565   Mean   :0.9189   Mean   :0.3831   Mean   :11.779  \n 3rd Qu.:0.8165   3rd Qu.:1.3022   3rd Qu.:0.4154   3rd Qu.:12.674  \n Max.   :0.9270   Max.   :1.5840   Max.   :0.4860   Max.   :14.957  \n```\n:::\n:::\n\nAs we can see, Year and Quarter column summary does not tell us much in terms of statistical data.\nLet's fix this.\n\n## Identify variables that need to be mutated\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, are all time variables correctly coded as dates? Are all string variables reduced and cleaned to sensible categories? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndebt_quarte_format <- debt %>%\n  mutate(date = parse_date_time(`Year and Quarter`,orders = \"yq\"))%>%\n  select(!contains(\"Year and Quarter\"))\n\ndebt_quarte_format\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74 × 8\n   Mortgage HE Revolvi…¹ Auto …² Credi…³ Stude…⁴ Other Total date               \n      <dbl>        <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl> <dttm>             \n 1     4.94        0.242   0.641   0.688   0.241 0.478  7.23 2003-01-01 00:00:00\n 2     5.08        0.26    0.622   0.693   0.243 0.486  7.38 2003-04-01 00:00:00\n 3     5.18        0.269   0.684   0.693   0.249 0.477  7.56 2003-07-01 00:00:00\n 4     5.66        0.302   0.704   0.698   0.253 0.449  8.07 2003-10-01 00:00:00\n 5     5.84        0.328   0.72    0.695   0.260 0.446  8.29 2004-01-01 00:00:00\n 6     5.97        0.367   0.743   0.697   0.263 0.423  8.46 2004-04-01 00:00:00\n 7     6.21        0.426   0.751   0.706   0.33  0.41   8.83 2004-07-01 00:00:00\n 8     6.36        0.468   0.728   0.717   0.346 0.423  9.04 2004-10-01 00:00:00\n 9     6.51        0.502   0.725   0.71    0.364 0.394  9.21 2005-01-01 00:00:00\n10     6.70        0.528   0.774   0.717   0.374 0.402  9.49 2005-04-01 00:00:00\n# … with 64 more rows, and abbreviated variable names ¹​`HE Revolving`,\n#   ²​`Auto Loan`, ³​`Credit Card`, ⁴​`Student Loan`\n```\n:::\n:::\n\n\nAny additional comments?\nNow let see the date summary\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(debt_quarte_format$date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                      Min.                    1st Qu. \n\"2003-01-01 00:00:00.0000\" \"2007-07-24 00:00:00.0000\" \n                    Median                       Mean \n\"2012-02-15 12:00:00.0000\" \"2012-02-15 06:09:43.7837\" \n                   3rd Qu.                       Max. \n\"2016-09-08 00:00:00.0000\" \"2021-04-01 00:00:00.0000\" \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}