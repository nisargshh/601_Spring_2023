{
  "hash": "6786ab28aace901b45a317ec2ba1aa51",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Sai Venkatesh\"\ndescription: \"Joining Data\"\ndate: \"04/29/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - activeduty\n  - snl\n  - faostat\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview {#challenge-overview}\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data (see detailed instruction below)\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data {#read-in-data}\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   military marriages (ActiveDuty_MaritalStatus.xls)⭐⭐\n-   faostat (birds.csv,FAOSTAT_country_groups.csv, and other \"FAOSTAT\\_\\*\" files) ⭐⭐⭐⭐\n-   snl (snl_actors.csv, snl_casts.csv, snl_seasons.csv)⭐⭐⭐\n\nWe are going to read the snl data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors <- read_csv(\"_data/snl_actors.csv\")\nhead(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  aid            url           type  gender \n  <chr>          <chr>         <chr> <chr>  \n1 Kate McKinnon  /Cast/?KaMc   cast  female \n2 Alex Moffat    /Cast/?AlMo   cast  male   \n3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n4 Chris Redd     /Cast/?ChRe   cast  male   \n5 Kenan Thompson /Cast/?KeTh   cast  male   \n6 Carey Mulligan /Guests/?3677 guest andy   \n```\n:::\n\n```{.r .cell-code}\n# The Dimensions \ndim(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n\n```{.r .cell-code}\n# The Column Names \ncolnames(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n\n```{.r .cell-code}\nsummary(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     aid                url                type              gender         \n Length:2306        Length:2306        Length:2306        Length:2306       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n```\n:::\n\n```{.r .cell-code}\nsnl_casts <- read_csv(\"_data/snl_casts.csv\")\nhead(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  aid                sid featured first_epid last_epid update_…¹ n_epi…² seaso…³\n  <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>       <dbl>   <dbl>\n1 A. Whitney Brown    11 TRUE       19860222        NA FALSE           8   0.444\n2 A. Whitney Brown    12 TRUE             NA        NA FALSE          20   1    \n3 A. Whitney Brown    13 TRUE             NA        NA FALSE          13   1    \n4 A. Whitney Brown    14 TRUE             NA        NA FALSE          20   1    \n5 A. Whitney Brown    15 TRUE             NA        NA FALSE          20   1    \n6 A. Whitney Brown    16 TRUE             NA        NA FALSE          20   1    \n# … with abbreviated variable names ¹​update_anchor, ²​n_episodes,\n#   ³​season_fraction\n```\n:::\n\n```{.r .cell-code}\n# The Dimensions \ndim(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n\n```{.r .cell-code}\n# The Column Names \ncolnames(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n\n```{.r .cell-code}\nsummary(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     aid                 sid         featured         first_epid      \n Length:614         Min.   : 1.00   Mode :logical   Min.   :19770115  \n Class :character   1st Qu.:15.00   FALSE:451       1st Qu.:19801215  \n Mode  :character   Median :26.00   TRUE :163       Median :19901110  \n                    Mean   :25.47                   Mean   :19909634  \n                    3rd Qu.:37.00                   3rd Qu.:19957839  \n                    Max.   :46.00                   Max.   :20141025  \n                                                    NA's   :564       \n   last_epid        update_anchor     n_episodes    season_fraction  \n Min.   :19751011   Mode :logical   Min.   : 1.00   Min.   :0.04167  \n 1st Qu.:19850112   FALSE:541       1st Qu.:19.00   1st Qu.:1.00000  \n Median :19950225   TRUE :73        Median :20.00   Median :1.00000  \n Mean   :19944038                   Mean   :18.73   Mean   :0.94827  \n 3rd Qu.:20040117                   3rd Qu.:21.00   3rd Qu.:1.00000  \n Max.   :20140201                   Max.   :24.00   Max.   :1.00000  \n NA's   :597                                                         \n```\n:::\n\n```{.r .cell-code}\nsnl_seasons <- read_csv(\"_data/snl_seasons.csv\")\nhead(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n    sid  year first_epid last_epid n_episodes\n  <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n1     1  1975   19751011  19760731         24\n2     2  1976   19760918  19770521         22\n3     3  1977   19770924  19780520         20\n4     4  1978   19781007  19790526         20\n5     5  1979   19791013  19800524         20\n6     6  1980   19801115  19810411         13\n```\n:::\n\n```{.r .cell-code}\n# The Dimensions \ndim(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n\n```{.r .cell-code}\n# The Column Names \ncolnames(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n\n```{.r .cell-code}\nsummary(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      sid             year        first_epid         last_epid       \n Min.   : 1.00   Min.   :1975   Min.   :19751011   Min.   :19760731  \n 1st Qu.:12.25   1st Qu.:1986   1st Qu.:19863512   1st Qu.:19872949  \n Median :23.50   Median :1998   Median :19975926   Median :19985512  \n Mean   :23.50   Mean   :1998   Mean   :19975965   Mean   :19985509  \n 3rd Qu.:34.75   3rd Qu.:2009   3rd Qu.:20088423   3rd Qu.:20098015  \n Max.   :46.00   Max.   :2020   Max.   :20201003   Max.   :20210410  \n   n_episodes  \n Min.   :12.0  \n 1st Qu.:20.0  \n Median :20.0  \n Mean   :19.7  \n 3rd Qu.:21.0  \n Max.   :24.0  \n```\n:::\n:::\n\n\n### Briefly describe the data {#briefly-describe-the-data}\n\n**SNL**\n\nThese data came to my attention courtesy of Jeremy Singer-Vine's wonderful [Data is Plural](https://dacss.github.io/601_Winter_2022-2023/posts/data-is-plural.com) newsletter. [These datasets](https://github.com/hhllcks/snldb), archived by Joel Navaroli and scraped by Hendrik Hilleckes and Colin Morris, contain data about the actors, cast, seasons, etc. from every season of Saturday Night Live from its inception through 2020.\n\nWith these three datasets, we can join them together to observe many different features, such as gender makeup and number of appearance, of the SNL casts and actors changed over time.\n\nSNL Actos consists of the actors with their ID, gender, type, url of around 2306 actors.\n\nSNL Casts consists of data for around 614 actors and their first, last episode, no of episodes, season id.\n\nSNL Seasons consists of data of the seasons which are in total 46 from 1975 - 2021\n\n## Tidy Data (as needed) {#tidy-data-as-needed}\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nThe data is already tidied. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n  non_matching_rows <- snl_actors %>%\n    anti_join(snl_casts, by = \"aid\")\n  non_matching_rows\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,150 × 4\n   aid               url           type  gender \n   <chr>             <chr>         <chr> <chr>  \n 1 Carey Mulligan    /Guests/?3677 guest andy   \n 2 Marcus Mumford    /Guests/?3679 guest male   \n 3 Steve Higgins     /Crew/?StHi   crew  male   \n 4 Kid Cudi          /Guests/?3678 guest unknown\n 5 Timothee Chalamet /Guests/?3680 guest unknown\n 6 Daniel Kaluuya    /Guests/?3675 guest male   \n 7 St. Vincent       /Guests/?3676 guest unknown\n 8 Jack Harlow       /Guests/?3670 guest male   \n 9 Adam Levine       /Guests/?3671 guest male   \n10 Nick Jonas        /Guests/?3667 guest male   \n# … with 2,140 more rows\n```\n:::\n:::\n\n\nThis shows there are a lot of rows in actors that are not in casts.\n\n## Join Data {#join-data}\n\nWe will join the necessary 3 datasets together first and then plot graphs based on them.\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors_casts <- snl_actors %>%\n  inner_join(snl_casts, by=\"aid\")\n\nsnl_actors_casts_seasons <- snl_actors_casts %>%\n  inner_join(snl_seasons, by=\"sid\")\nsnl_actors_casts_seasons\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 15\n   aid          url   type  gender   sid featu…¹ first…² last_…³ updat…⁴ n_epi…⁵\n   <chr>        <chr> <chr> <chr>  <dbl> <lgl>     <dbl>   <dbl> <lgl>     <dbl>\n 1 Kate McKinn… /Cas… cast  female    37 TRUE     2.01e7      NA FALSE         5\n 2 Kate McKinn… /Cas… cast  female    38 TRUE    NA           NA FALSE        21\n 3 Kate McKinn… /Cas… cast  female    39 FALSE   NA           NA FALSE        21\n 4 Kate McKinn… /Cas… cast  female    40 FALSE   NA           NA FALSE        21\n 5 Kate McKinn… /Cas… cast  female    41 FALSE   NA           NA FALSE        21\n 6 Kate McKinn… /Cas… cast  female    42 FALSE   NA           NA FALSE        21\n 7 Kate McKinn… /Cas… cast  female    43 FALSE   NA           NA FALSE        21\n 8 Kate McKinn… /Cas… cast  female    44 FALSE   NA           NA FALSE        21\n 9 Kate McKinn… /Cas… cast  female    45 FALSE   NA           NA FALSE        18\n10 Kate McKinn… /Cas… cast  female    46 FALSE   NA           NA FALSE        17\n# … with 604 more rows, 5 more variables: season_fraction <dbl>, year <dbl>,\n#   first_epid.y <dbl>, last_epid.y <dbl>, n_episodes.y <dbl>, and abbreviated\n#   variable names ¹​featured, ²​first_epid.x, ³​last_epid.x, ⁴​update_anchor,\n#   ⁵​n_episodes.x\n```\n:::\n\n```{.r .cell-code}\nsnl_actors_casts_seasons %>%\n  ggplot(aes(sid, col=gender)) +\n  geom_histogram() + \n  labs(title = \"Gender Makeup\")\n```\n\n::: {.cell-output-display}\n![](SaiVenkateshChallenge8_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsnl_actors_casts_seasons %>%\n  ggplot(aes(sid, featured)) +\n  geom_point() + \n  labs(title = \"Featured\")\n```\n\n::: {.cell-output-display}\n![](SaiVenkateshChallenge8_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "SaiVenkateshChallenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}