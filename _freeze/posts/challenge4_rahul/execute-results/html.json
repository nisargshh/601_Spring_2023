{
  "hash": "07b977d691f626ae0a8e6b4084448d5a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Rahul Somu\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"04/10/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nCombine Year-Month-Date as one column to help us filter based on date. Based on date, all the variable values can be filter. Duplicates can be removed.\n\nBelow is the code for the above code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/rahulsomu/Documents/DACSS_601/601_repo/posts\"\n```\n:::\n\n```{.r .cell-code}\n# read in the data\nfed_funds <- read.csv(\"/Users/rahulsomu/Documents/DACSS_601/601_repo/posts/_data/FedFundsRate.csv\",col.names = c(\"Year\",\t\"Month\",\t\"Day\",\t\"Federal_Funds_Target_Rate\",\t\"Federal_Funds_Upper_Target\",\t\"Federal_Funds_Lower_Target\",\t\"Effective_Federal_Funds_Rate\",\t\"Real_GDP_Percent_Change\"\t,\"Unemployment_Rate\",\"Inflation_Rate\"))\ncolnames(fed_funds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Year\"                         \"Month\"                       \n [3] \"Day\"                          \"Federal_Funds_Target_Rate\"   \n [5] \"Federal_Funds_Upper_Target\"   \"Federal_Funds_Lower_Target\"  \n [7] \"Effective_Federal_Funds_Rate\" \"Real_GDP_Percent_Change\"     \n [9] \"Unemployment_Rate\"            \"Inflation_Rate\"              \n```\n:::\n\n```{.r .cell-code}\n# Pivot the data into tidy format\nfed_funds_tidy <- pivot_longer(fed_funds, \n                               cols = c(\"Federal_Funds_Target_Rate\", \n                                        \"Federal_Funds_Upper_Target\", \n                                        \"Federal_Funds_Lower_Target\", \n                                        \"Effective_Federal_Funds_Rate\", \n                                        \"Real_GDP_Percent_Change\", \n                                        \"Unemployment_Rate\", \n                                        \"Inflation_Rate\"), \n                               names_to = \"Variable\", \n                               values_to = \"Value\")\n\n# Mutate variables as needed\nfed_funds_tidy <- fed_funds_tidy %>% \n  mutate(Date = as.Date(paste(Year, Month, Day, sep = \"-\")),\n         Year = NULL,\n         Month = NULL,\n         Day = NULL,\n         Variable = gsub(\"\\\\(.*\\\\)\", \"\", Variable),\n         Variable = gsub(\"Real GDP\", \"GDP\", Variable),\n         Variable = tolower(Variable),\n         Variable = gsub(\" \", \"_\", Variable))\n\n# Check for any missing values\nsum(is.na(fed_funds_tidy))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3196\n```\n:::\n\n```{.r .cell-code}\n# Check for any duplicated rows\nany(duplicated(fed_funds_tidy))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nfed_funds_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6,328 × 3\n   Variable                     Value Date      \n   <chr>                        <dbl> <date>    \n 1 federal_funds_target_rate     NA   1954-07-01\n 2 federal_funds_upper_target    NA   1954-07-01\n 3 federal_funds_lower_target    NA   1954-07-01\n 4 effective_federal_funds_rate   0.8 1954-07-01\n 5 real_gdp_percent_change        4.6 1954-07-01\n 6 unemployment_rate              5.8 1954-07-01\n 7 inflation_rate                NA   1954-07-01\n 8 federal_funds_target_rate     NA   1954-08-01\n 9 federal_funds_upper_target    NA   1954-08-01\n10 federal_funds_lower_target    NA   1954-08-01\n# … with 6,318 more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}