{
  "hash": "412eb86650edc83c5b835fe064d42a39",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Pranav Bharadwaj Komaravolu\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/27/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: false\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\n<!--Read in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ⭐\n-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐\n-   australian_marriage\\*.xls ⭐⭐⭐\n-   USA Households\\*.xlsx ⭐⭐⭐⭐\n-   sce_labor_chart_data_public.xlsx 🌟🌟🌟🌟🌟\n-->\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"_data/eggs_tidy.csv\")\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  month     year large_half_dozen large_dozen extra_large_half_dozen extra_lar…¹\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>       <dbl>\n1 January   2004             126         230                    132         230 \n2 February  2004             128.        226.                   134.        230 \n3 March     2004             131         225                    137         230 \n4 April     2004             131         225                    137         234.\n5 May       2004             131         225                    137         236 \n6 June      2004             134.        231.                   137         241 \n# … with abbreviated variable name ¹​extra_large_dozen\n```\n:::\n:::\n\n\n### Data Description\n\n<!--Describe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\" -->\nThe summary of the data is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    month                year      large_half_dozen  large_dozen   \n Length:120         Min.   :2004   Min.   :126.0    Min.   :225.0  \n Class :character   1st Qu.:2006   1st Qu.:129.4    1st Qu.:233.5  \n Mode  :character   Median :2008   Median :174.5    Median :267.5  \n                    Mean   :2008   Mean   :155.2    Mean   :254.2  \n                    3rd Qu.:2011   3rd Qu.:174.5    3rd Qu.:268.0  \n                    Max.   :2013   Max.   :178.0    Max.   :277.5  \n extra_large_half_dozen extra_large_dozen\n Min.   :132.0          Min.   :230.0    \n 1st Qu.:135.8          1st Qu.:241.5    \n Median :185.5          Median :285.5    \n Mean   :164.2          Mean   :266.8    \n 3rd Qu.:185.5          3rd Qu.:285.5    \n Max.   :188.1          Max.   :290.0    \n```\n:::\n:::\n\n The dataset describes the price of different quantities of two different varieties of eggs in different years and seasons.\n\n## Pivot Longer\n\n<!--The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe! -->\n\nIn the above dataset we can see that multiple quantities are specified as columns so we can use pivot longer to reduce these to a single column.\n\nThe dimensions of the dataset is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120   6\n```\n:::\n:::\n\nThe dataset comprises of 120 rows and 6 columns.\n\nThe different columns in the dataset are:\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"                  \"year\"                   \"large_half_dozen\"      \n[4] \"large_dozen\"            \"extra_large_half_dozen\" \"extra_large_dozen\"     \n```\n:::\n:::\n\nSo the target would be to reduce the columns \"large_half_dozen\", \"large_dozen\", \"extra_large_half_dozen\", \"extra_large_dozen\" to a single column \"quantity\". \n\n::: {.cell}\n\n```{.r .cell-code}\nreduced_cols <- 4\nrows <- nrow(data)\ncols <- ncol(data)\nnew_rows <- rows*reduced_cols\nnew_cols <- cols-reduced_cols+2\nnew_rows\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\nnew_cols\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nSo the reduced dimensions will be $120\\times4\\times(6-4+2)$ i.e, the target dimensions is $480\\times4$.\n\n\n### Pivot the data and current dimensions\n\nLets see if this works with a simple example.\n\nThe pivoting of the dataset can be done as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\npivotted_data <- pivot_longer(data, contains(\"dozen\"), names_to = c(\"quantity\"), values_to = c(\"price\"))\nhead(pivotted_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  month     year quantity               price\n  <chr>    <dbl> <chr>                  <dbl>\n1 January   2004 large_half_dozen        126 \n2 January   2004 large_dozen             230 \n3 January   2004 extra_large_half_dozen  132 \n4 January   2004 extra_large_dozen       230 \n5 February  2004 large_half_dozen        128.\n6 February  2004 large_dozen             226.\n```\n:::\n:::\n\nThe dimensions of the reduced data is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(pivotted_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480   4\n```\n:::\n:::\n\nYes, once it is pivoted long, our resulting data are $480x4$ - exactly what we expected!\n\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\nReducing the number of columns makes the data more readable and also efficient to view. Also it is suitable as the multiple columns can be reduced to a single column.\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}