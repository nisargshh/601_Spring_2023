{
  "hash": "5c6bedf59d05a36f9973d752447d266d",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Aritra Basu\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"03/18/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - Aritra Basu\n  - faostat\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(descr)\nlibrary(readr)\nlibrary(summarytools)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Reading in the Data\n\nIn this way, I have read in the data:\n\n::: {.cell}\n\n```{.r .cell-code}\nfaostat <- read.csv(\"_data/FAOSTAT_cattle_dairy.csv\")\n```\n:::\n\n\n## Describing the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nview(dfSummary(faostat, style=\"grid\", graph.magnif = 0.75, valid.col = FALSE))\n```\n:::\n\nUsing dfsummary from the package summarytools, we can see that the dataset has 36449 rows and 14 columns. From dfsummary, we can see that the Area variable includes both unique region names as well as greater geographical aggregations. We can see that there are three Elements: milk animals, production and yield. The units are Head, hg/An and tonnes respectively. The data is for years 1961 to 2018, that is, 58 distinct years. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nflag_description <- faostat %>% distinct(Flag.Description)\n```\n:::\n\nIt can be observed that \n\nLet us see what the unique regional units are:\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nunique_units <- faostat %>% distinct(Area)\n```\n:::\n\nIt can be seen that there are 204 unique region names.\n`\nI will locate the distinct regions to eliminate overlaps.\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct_regions_identify <- faostat %>% distinct(Area, Area.Code)\n```\n:::\n\nI use this to only retain the unique regions. We have seen that the area codes of the unique regional units have area code less than 5000.\n\n::: {.cell}\n\n```{.r .cell-code}\nfaostat_filter <- faostat %>% filter(Area.Code < 5000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfaostat_summary1 <- faostat_filter  %>% \n  filter(Element == \"Milk Animals\")  %>% \n  group_by(Area)  %>% \n  summarise(\n    Mean=mean(Value, na.rm = TRUE),\n    Quantile1 = quantile(Value, c(0.25), q1 = c(0.25), na.rm = TRUE),\n    Median=median(Value, na.rm = TRUE),\n    Quantile3 = quantile(Value, c(0.75), q3 = c(0.75), na.rm = TRUE),\n    SD=sd(Value, na.rm = TRUE),\n    min=min(Value, na.rm = TRUE),\n    max=max(Value, na.rm = TRUE),\n    )\nfaostat_summary1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 205 × 8\n   Area                     Mean Quantile1   Median Quant…¹     SD    min    max\n   <chr>                   <dbl>     <dbl>    <dbl>   <dbl>  <dbl>  <dbl>  <dbl>\n 1 Afghanistan         1790863.  1029500   1150000   2.6 e6 1.08e6 7   e5 4.05e6\n 2 Albania              288774.   167625    284650   3.59e5 1.13e5 1.17e5 4.88e5\n 3 Algeria              659719.   455000    640000   8.69e5 2.50e5 2.63e5 1.11e6\n 4 American Samoa           25.8      22.2      24   2.88e1 6.05e0 2   e1 4   e1\n 5 Angola               324717.   285163.   320000   3.54e5 5.53e4 2.2 e5 4.36e5\n 6 Antigua and Barbuda    5196.     3205      5525   6.6 e3 2.18e3 2.3 e3 9.07e3\n 7 Argentina           2458013.  2194750   2400000   2.75e6 3.89e5 1.60e6 3.45e6\n 8 Armenia              281229.   267382.   277840   2.97e5 2.05e4 2.51e5 3.19e5\n 9 Australia           2080423.  1691265.  1882060.  2.35e6 4.91e5 1.52e6 3.26e6\n10 Austria              825008.   548830    885372   1.02e6 2.34e5 5.25e5 1.14e6\n# … with 195 more rows, and abbreviated variable name ¹​Quantile3\n```\n:::\n:::\n\nFirst, I have filtered Milk Animals, and then I grouped it using Area. Grouping by area is quite intuitive as we have observation for region for multiple years. We can observe the mean, values for the three quantiles, standard deviation, minimum and maximum. Next I also explicitly show the three quantiles by area.\n\n::: {.cell}\n\n```{.r .cell-code}\nthree_quantiles <- faostat_filter  %>% \n  filter(Element == \"Milk Animals\")  %>% \n  group_by(Area) %>% \n  summarise(  Quantile1 = quantile(Value, c(0.25, 0.5, 0.75), na.rm = TRUE), q = c(0.25, 0.5, 0.75))\nthree_quantiles\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 615 × 3\n# Groups:   Area [205]\n   Area           Quantile1     q\n   <chr>              <dbl> <dbl>\n 1 Afghanistan    1029500    0.25\n 2 Afghanistan    1150000    0.5 \n 3 Afghanistan    2600000    0.75\n 4 Albania         167625    0.25\n 5 Albania         284650    0.5 \n 6 Albania         359491.   0.75\n 7 Algeria         455000    0.25\n 8 Algeria         640000    0.5 \n 9 Algeria         868881.   0.75\n10 American Samoa      22.2  0.25\n# … with 605 more rows\n```\n:::\n:::\n\nA similar grouping could be done by filtering the data with elements production as well as yield.\n\nGrouping again by Area, but filtering using Yield would give us:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfaostat_summary3 <- faostat_filter  %>% \n  filter(Element == \"Yield\")  %>% \n  group_by(Area)  %>% \n  summarise(\n    Mean=mean(Value, na.rm = TRUE),\n    Quantile1 = quantile(Value, c(0.25), q1 = c(0.25), na.rm = TRUE),\n    Median=median(Value, na.rm = TRUE),\n    Quantile3 = quantile(Value, c(0.75), q3 = c(0.75), na.rm = TRUE),\n    SD=sd(Value, na.rm = TRUE),\n    min=min(Value, na.rm = TRUE),\n    max=max(Value, na.rm = TRUE),\n    ) %>% \n  arrange(desc(Mean))\nfaostat_summary3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 204 × 8\n   Area                       Mean Quantile1 Median Quanti…¹     SD   min    max\n   <chr>                     <dbl>     <dbl>  <dbl>    <dbl>  <dbl> <int>  <int>\n 1 Israel                   82874.    60312. 86202.   97929  25084. 42941 134121\n 2 United States of America 67685.    47596. 66011    85774. 21965. 33068 104633\n 3 Luxembourg               65046.    61606. 64045    67626   6235. 54412  77429\n 4 Republic of Korea        64932.    39392. 59580    97440. 29276. 17144 106757\n 5 Czechia                  63992.    52134  64825    76416. 14758. 39513  87559\n 6 Belgium                  63894.    57585  60777    72116   8099. 55091  77537\n 7 Denmark                  62537.    45102. 62164    77245  18897. 35943  98952\n 8 Sweden                   62221.    47403. 60110.   81047  17808. 31900  88172\n 9 Netherlands              59649.    46500. 60230.   71319  13211. 40885  85870\n10 Estonia                  59447.    42630  57508    73334. 19527. 31838  93615\n# … with 194 more rows, and abbreviated variable name ¹​Quantile3\n```\n:::\n:::\n\n\nHere, I have arranged the output in descending order of mean. This allows us to arrange the countries according to the highest mean yields. We can see that Israel occupies the top of the list, while Cote d'Ivorie is at the bottom.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfaostat_summary4 <- faostat_filter  %>% \n  filter(Element == \"Yield\")  %>% \n  group_by(Year)  %>% \n  summarise(\n    Mean=mean(Value, na.rm = TRUE),\n    Quantile1 = quantile(Value, c(0.25), q1 = c(0.25), na.rm = TRUE),\n    Median=median(Value, na.rm = TRUE),\n    Quantile3 = quantile(Value, c(0.75), q3 = c(0.75), na.rm = TRUE),\n    SD=sd(Value, na.rm = TRUE),\n    min=min(Value, na.rm = TRUE),\n    max=max(Value, na.rm = TRUE),\n    ) %>% \n  arrange(desc(SD))\nfaostat_summary4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 8\n    Year   Mean Quantile1 Median Quantile3     SD   min    max\n   <int>  <dbl>     <dbl>  <dbl>     <dbl>  <dbl> <int>  <int>\n 1  2017 27727.     7941  14205     39320  27443.   955 131817\n 2  2018 27565.     7808  14115     39315  27428.   999 134121\n 3  2016 27442.     7944  14359     39302  27016.   994 129531\n 4  2015 26874.     7948  14186     37444  26324.   960 119815\n 5  2014 26749.     8001  14127     39546  26146.  1000 122949\n 6  2012 26284.     7532. 13906.    35807. 25614.  1000 115553\n 7  2013 26295.     7707  13908     38600. 25551.  1000 116872\n 8  2011 26103.     7338. 13901     36252. 25307.  1000 113931\n 9  2010 25605.     7288. 13890     37084. 24863.  1000 107672\n10  2009 25175.     7151. 13892.    36079  24419.  1000 106757\n# … with 48 more rows\n```\n:::\n:::\n\nThis would be another alternative way of grouping the data, where Yield has been filtered, but instead of grouping the dataset by country, we have grouped it by year. This allows the possibility of looking at yield over the years. For example, we can see that 2017 was the year with the highest variance in yield while 1961 was the year with the lowest variance. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}