{
  "hash": "5e490fd5cb41b4a0c777e013bd23a51e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5: Public School Characteristics\"\nauthor: \"Teresa Lardo\"\ndescription: \"Creating uni- and bivariate visualizations\"\ndate: \"03/29/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - Teresa Lardo\n  - public_schools\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Read in data\n\nFor this challenge, I will read in the data set on **Public School characteristics**. \n\n\n::: {.cell}\n\n```{.r .cell-code}\npublic_schools <- read_csv(\"_data/Public_School_Characteristics_2017-18.csv\", show_col_types = FALSE)\n```\n:::\n\n\n\n### Briefly describe the data\n\nThe data set describes characteristics of just under **101,000 public schools** in the United States. The variables include location information (latitude, longitude, state, school district, street address, zip code, etc.), contact information, whether or not the school is virtual, number of students per grade level, racial and ethnic background data for students, student/teacher ratio, and more. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(public_schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 79\n      X     Y OBJECTID NCESSCH     NMCNTY SURVYEAR STABR LEAID ST_LEAID LEA_NAME\n  <dbl> <dbl>    <dbl> <chr>       <chr>  <chr>    <chr> <chr> <chr>    <chr>   \n1 -149.  61.6        1 0200510004… Matan… 2017-20… AK    0200… AK-33    Matanus…\n2 -157.  71.3        2 0200610004… North… 2017-20… AK    0200… AK-36    North S…\n3 -151.  60.5        3 0200390004… Kenai… 2017-20… AK    0200… AK-24    Kenai P…\n4 -151.  60.6        4 0200390004… Kenai… 2017-20… AK    0200… AK-24    Kenai P…\n5 -151.  60.6        5 0200390005… Kenai… 2017-20… AK    0200… AK-24    Kenai P…\n6 -133.  56.1        6 0200700005… Princ… 2017-20… AK    0200… AK-44    Southea…\n# ℹ 69 more variables: SCH_NAME <chr>, LSTREET1 <chr>, LSTREET2 <chr>,\n#   LSTREET3 <lgl>, LCITY <chr>, LSTATE <chr>, LZIP <chr>, LZIP4 <chr>,\n#   PHONE <chr>, GSLO <chr>, GSHI <chr>, VIRTUAL <chr>, TOTFRL <dbl>,\n#   FRELCH <dbl>, REDLCH <dbl>, PK <dbl>, KG <dbl>, G01 <dbl>, G02 <dbl>,\n#   G03 <dbl>, G04 <dbl>, G05 <dbl>, G06 <dbl>, G07 <dbl>, G08 <dbl>,\n#   G09 <dbl>, G10 <dbl>, G11 <dbl>, G12 <dbl>, G13 <lgl>, TOTAL <dbl>,\n#   MEMBER <dbl>, AM <dbl>, HI <dbl>, BL <dbl>, WH <dbl>, HP <dbl>, TR <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(public_schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100729     79\n```\n:::\n:::\n\n\n\n## Tidy Data \n\n### Problems() and Changing Data Types\n\nWhen I originally read the csv file in, I got a warning message that said to call `problems()` for more information. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nproblems(public_schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 110 × 5\n     row   col expected           actual   file                                 \n   <int> <int> <chr>              <chr>    <chr>                                \n 1 15701    73 1/0/T/F/TRUE/FALSE 184      C:/Users/Peregrine/Documents/601_Spr…\n 2 15823    73 1/0/T/F/TRUE/FALSE 224      C:/Users/Peregrine/Documents/601_Spr…\n 3 21611    14 1/0/T/F/TRUE/FALSE Room 121 C:/Users/Peregrine/Documents/601_Spr…\n 4 44514    40 1/0/T/F/TRUE/FALSE 48       C:/Users/Peregrine/Documents/601_Spr…\n 5 44518    40 1/0/T/F/TRUE/FALSE 59       C:/Users/Peregrine/Documents/601_Spr…\n 6 44522    40 1/0/T/F/TRUE/FALSE 24       C:/Users/Peregrine/Documents/601_Spr…\n 7 44524    40 1/0/T/F/TRUE/FALSE 30       C:/Users/Peregrine/Documents/601_Spr…\n 8 44530    40 1/0/T/F/TRUE/FALSE 21       C:/Users/Peregrine/Documents/601_Spr…\n 9 44536    40 1/0/T/F/TRUE/FALSE 22       C:/Users/Peregrine/Documents/601_Spr…\n10 44537    40 1/0/T/F/TRUE/FALSE 29       C:/Users/Peregrine/Documents/601_Spr…\n# ℹ 100 more rows\n```\n:::\n:::\n\n\nI used `print(problems(public_schools), n = nrow(problems(public_schools)))` and got a list of 110 issues, which all occurred in columns 14, 40, and 73. Boolean values were expected for these columns, while the actual values were often numbers or character strings. The data type of these three columns will need to be changed. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Change Column 14 (LSTREET3) from logical to character type\npublic_schools$LSTREET3 <- as.character(as.logical(public_schools$LSTREET3))\n\n# Change Column 40 (G13) from logical to numeric type\npublic_schools$G13 <- as.numeric(as.logical(public_schools$G13))\n\n# Change Column 73 (AE) from logical to numeric type\npublic_schools$AE <- as.numeric(as.logical(public_schools$AE))\n```\n:::\n\n\nLet's check the data types for these columns to make sure our changes went through as intended. We're expecting LSTREET3 column to have a *character* type and the other two columns to have *numeric* types.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(public_schools$LSTREET3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nclass(public_schools$G13)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n\n```{.r .cell-code}\nclass(public_schools$AE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n\nHurray!\n\n\n### Removing Repetitive Data\n\nThis data set includes a column for the survey year, which suggests that this data was taken from a longer set that includes data from different survey years. However, this set is only from **one survey year**, as we can see from running the `unique()` function for that column:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(public_schools$SURVYEAR)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2017-2018\"\n```\n:::\n:::\n\n\nAs this \"variable\" does not vary at all in our data, we can remove this from the data set. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove Survey Year column\npublic_schools <- public_schools %>%\n  select(-SURVYEAR)\n```\n:::\n\n\nThe data set also contains two sets of columns containing the latitude and longitudinal coordinates for the schools - columns **X** and **Y** as well as columns **LATCOD** and **LONCOD**. We can remove one set of these repetitive columns without losing any unique information. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove columns X and Y\npublic_schools <- public_schools %>%\n  select(-c(X, Y))\n```\n:::\n\n\nLet's get a quick view of our data set to make sure these 3 columns have been removed:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(public_schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 76\n  OBJECTID NCESSCH      NMCNTY   STABR LEAID ST_LEAID LEA_NAME SCH_NAME LSTREET1\n     <dbl> <chr>        <chr>    <chr> <chr> <chr>    <chr>    <chr>    <chr>   \n1        1 020051000480 Matanus… AK    0200… AK-33    Matanus… John Sh… 3750 E …\n2        2 020061000470 North S… AK    0200… AK-36    North S… Kiita L… 5246 Ka…\n3        3 020039000448 Kenai P… AK    0200… AK-24    Kenai P… Soldotn… 158 E P…\n4        4 020039000463 Kenai P… AK    0200… AK-24    Kenai P… Kaleido… 549 N F…\n5        5 020039000513 Kenai P… AK    0200… AK-24    Kenai P… Maratho… 405 Mar…\n6        6 020070000526 Prince … AK    0200… AK-44    Southea… Whale P… 126 Bay…\n# ℹ 67 more variables: LSTREET2 <chr>, LSTREET3 <chr>, LCITY <chr>,\n#   LSTATE <chr>, LZIP <chr>, LZIP4 <chr>, PHONE <chr>, GSLO <chr>, GSHI <chr>,\n#   VIRTUAL <chr>, TOTFRL <dbl>, FRELCH <dbl>, REDLCH <dbl>, PK <dbl>,\n#   KG <dbl>, G01 <dbl>, G02 <dbl>, G03 <dbl>, G04 <dbl>, G05 <dbl>, G06 <dbl>,\n#   G07 <dbl>, G08 <dbl>, G09 <dbl>, G10 <dbl>, G11 <dbl>, G12 <dbl>,\n#   G13 <dbl>, TOTAL <dbl>, MEMBER <dbl>, AM <dbl>, HI <dbl>, BL <dbl>,\n#   WH <dbl>, HP <dbl>, TR <dbl>, FTE <dbl>, LATCOD <dbl>, LONCOD <dbl>, …\n```\n:::\n:::\n\n\n\n## Mutation\n\nThe **ULOCALE** variable in this data set lists 12 different settings, including \"Rural: Fringe,\" \"Town: Remote,\" \"City: Mid-size,\" and \"Suburb: Large.\" I'd like to use `mutate()` to create a column that categorizes each school into a smaller number of possible environments - simply Rural, Town, City, and Suburb. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npublic_schools <- public_schools %>%\n   mutate(ENVIRONMENT = case_when(ULOCALE %in% c(\"11-City: Large\", \"12-City: Mid-size\", \"13-City: Small\") ~ \"City\",\n                                  ULOCALE %in% c(\"21-Suburb: Large\", \"22-Suburb: Mid-size\", \"23-Suburb: Small\") ~ \"Suburb\",\n                                  ULOCALE %in% c(\"31-Town: Fringe\", \"32-Town: Distant\", \"33-Town: Remote\") ~ \"Town\",\n                                  ULOCALE %in% c(\"41-Rural: Fringe\", \"42-Rural: Distant\", \"43-Rural: Remote\") ~ \"Rural\"))\n```\n:::\n\n\n\n\n## Univariate Visualizations\n\n### School Levels\n\nI'd like to get a look at which levels of school (elementary, middle, etc.) are most represented in the data set. I want to try out a treemap for this to get a quick, visual sense of the proportion of each type of school level within the data set. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data source to store the counts by School Level\nlevels <- public_schools %>%\n  count(SCHOOL_LEVEL)\n# Load treemapify from library\nlibrary(treemapify)\n# Create a treemap\nggplot(levels, \n       aes(fill = SCHOOL_LEVEL, \n           area = n, \n           label = SCHOOL_LEVEL)) +\n  geom_treemap() + \n  geom_treemap_text(colour = \"black\", \n                    place = \"centre\") +\n  labs(title = \"Public Schools by Level\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](TeresaLardo_Challenge5_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThis tree map shows that most of the schools in this data set are elementary schools - it looks like more than half of the schools are elementary level. We can also look into more exact percentages for these school levels by using a bar chart: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\n# Create data source for School Level counts and percentages\nlevel_perc <- public_schools %>%\n  count(SCHOOL_LEVEL) %>%\n  mutate(pct = n / sum(n),\n         pctlabel = paste0(round(pct*100), \"%\"))\n\n# Create a bar chart showing the percentages of each level of school\nggplot(level_perc, \n       aes(x = reorder(SCHOOL_LEVEL, -pct),\n           y = pct)) + \n  geom_bar(stat = \"identity\", \n           fill = \"steelblue\", \n           color = \"black\") +\n  geom_text(aes(label = pctlabel), \n            vjust = -0.25) +\n  scale_y_continuous(labels = percent) +\n  labs(x = \"School Levels\", \n       y = \"Percent\", \n       title  = \"School Levels for Public Schools, 2017-18\") +\n  theme(axis.text.x = element_text(angle = 45,\n                                   hjust = 1))\n```\n\n::: {.cell-output-display}\n![](TeresaLardo_Challenge5_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThis bar chart confirms that the percentage of elementary schools within our data set is slightly over half. Compared to the tree map, the bar chart also has much more readable labels for the less represented school levels.  \n\n\n### Operational Status\n\nThe data set includes a column displaying the operational status of each school. Let's use a bar chart to get a sense of how many schools of each status are in our data set. I'll use `coord_flip()` to make this a horizontal bar chart for the sake of reading each operational status label more easily. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(public_schools, aes(x = SY_STATUS_TEXT)) + \n  geom_bar(fill = \"hotpink\",\n           color = \"black\") +\n  labs(title=\"Status of Public Schools, 2017-18\",\n       x = \"Operational Status\") + \n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](TeresaLardo_Challenge5_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nOur horizontal bar chart shows that by far most of the schools in our data set were currently operational when the data was collected. \n\n\n\n## Bivariate Visualizations\n\n### Total Students in Towns, Cities, Suburbs, & Rural Areas\n\nLet's create a visualization to show the total number of public school students by school environment (***city, rural, suburb***, and ***town***). \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(public_schools, aes(x=ENVIRONMENT, y=TOTAL)) +\n    geom_bar(stat = \"identity\", color=\"darkgreen\", width=0.45) + \n    xlab(\"Environment of Public Schools\") + ylab(\"Total Number of Students\") + \n    ggtitle(\"Total Public School Students by Environment Type\")\n```\n\n::: {.cell-output-display}\n![](TeresaLardo_Challenge5_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\nThis visualization shows that the environment with the most public school students overall is the **suburbs**, with the **city** pulling in second. **Town** has the lowest number of total public school students, which makes me curious how \"town\" is defined for this data set. \n\n\n### Student-Teacher Ratios in Virtual/Non-Virtual Schools\n\nAs this data set has a variable on virtual versus non-virtual status of the schools, I'm curious to look into some of the data on virtual public schools. However, when I filtered the data set down to only virtual schools, the result was a relatively small portion of our total data. So I want to compare the virtual and non-virtual schools in terms of student-teacher ratios to see if there is any noticeable difference to be seen (beyond there being much fewer numbers of virtual schools overall). \n\nI will use a scatterplot in the interest of seeing where most data points gather and where more outlying points appear. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter out the N/A & Missing values from the VIRTUAL variable\npublic_schools <- public_schools %>%\n  filter(VIRTUAL == c(\"A virtual school\", \"Not a virtual school\"))\n\n# Student Teacher Ratios at Virtual & Non-Virtual Schools\nggplot(public_schools, \n      aes(y = factor(VIRTUAL,\n                     labels = c(\"Virtual School\", \"Non-virtual School\")),\n          x = STUTERATIO,\n          color = VIRTUAL)) +\n   geom_jitter(alpha = 0.7,\n               size = 1.5) + \n   scale_x_continuous() +\n   labs(title = \"Student-Teacher Ratios for Virtual & Non-Virtual Public Schools\",\n        x = \"Number of Students Per Teacher\",\n        y = \"Types of Schools\") +\n   theme_minimal() +\n   theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](TeresaLardo_Challenge5_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nThis scatterplot shows that the student-teacher ratios for both virtual and non-virtual public schools fall below 125 students per teacher. The plot captures an outlying data point for one of the non-virtual schools where the student-teacher ratio is nearing 25000 students to a teacher. That seems likely to be an error in the data. \n\nI'm interested in seeing a close-up view of the most common student-teacher ratios, so I'm going to filter out the higher student-teacher ratios and concentrate on the data points that fall below 100. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter out higher STR from our data set to use in a new version of the plot above\npublic_schools <- public_schools %>%\n  filter(STUTERATIO < 100)\n\n# Student Teacher Ratios at Virtual & Non-Virtual Schools\nggplot(public_schools, \n      aes(y = factor(VIRTUAL,\n                     labels = c(\"Virtual School\", \"Non-virtual School\")),\n          x = STUTERATIO,\n          color = VIRTUAL)) +\n   geom_jitter(alpha = 0.7,\n               size = 1.5) + \n   scale_x_continuous() +\n   labs(title = \"Student-Teacher Ratios under 125:1\",\n        x = \"Number of Students Per Teacher\",\n        y = \"Types of Schools\") +\n   theme_minimal() +\n   theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](TeresaLardo_Challenge5_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nThis \"zoomed-in\" version of the scatterplot shows us that the highest concentration of student-teacher ratios falls between 1 and roughly 30 students per teacher. ",
    "supporting": [
      "TeresaLardo_Challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}