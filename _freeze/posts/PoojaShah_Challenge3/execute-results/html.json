{
  "hash": "8dfdac740893c62cb4a4c5496f228f1f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Pooja Shah\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"04/27/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#reading and printing unclean data\neggs = read_excel(\"_data/organiceggpoultry.xls\", sheet = \"Data\", range = \"B5:F125\", col_names = c(\"date\", \"xlarge_dozen\",\n                               \"xlarge_halfdozen\", \"large_dozen\",\n                               \"large_halfdozen\"))\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 121 √ó 5\n   date      xlarge_dozen          xlarge_halfdozen  large_dozen large_halfdozen\n   <chr>     <chr>                 <chr>             <chr>       <chr>          \n 1 <NA>      \"Extra Large \\nDozen\" \"Extra Large 1/2‚Ä¶ \"Large \\nD‚Ä¶ \"Large \\n1/2 D‚Ä¶\n 2 Jan 2004  \"230\"                 \"132\"             \"230\"       \"126\"          \n 3 February  \"230\"                 \"134.5\"           \"226.25\"    \"128.5\"        \n 4 March     \"230\"                 \"137\"             \"225\"       \"131\"          \n 5 April     \"234.5\"               \"137\"             \"225\"       \"131\"          \n 6 May       \"236\"                 \"137\"             \"225\"       \"131\"          \n 7 June      \"241\"                 \"137\"             \"231.375\"   \"133.5\"        \n 8 July      \"241\"                 \"137\"             \"233.5\"     \"133.5\"        \n 9 August    \"241\"                 \"137\"             \"233.5\"     \"133.5\"        \n10 September \"241\"                 \"135.875\"         \"233.5\"     \"129.75\"       \n# ‚Ñπ 111 more rows\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\nI am working here with the \"Data\" sheet of the \"organiceggpoultry\" excel file.\nThe data is in the form of multiple columns for types of eggs. The rows are prices of these eggs for each month. \n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nThe tidy data should be of the form of columns for type of poultry, year and then the price for 12 months.\n\n### Find current and future data dimensions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#existing rows\nnrow(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 121\n```\n:::\n\n```{.r .cell-code}\n#existing columns\nncol(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows\nrow = ((nrow(eggs) - 1)/12) * (ncol(eggs) - 1)\nrow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 40\n```\n:::\n\n```{.r .cell-code}\n# expected columns \ncol = 12 + 2\ncol\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14\n```\n:::\n:::\n\n\n### Challenge: Describe the final dimensions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste(\"The final dimensions should be \", row, \"x\", col))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The final dimensions should be  40 x 14\"\n```\n:::\n:::\n\n\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs <- eggs %>% drop_na\n\neggs%>%\n  count(date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 22 √ó 2\n   date            n\n   <chr>       <int>\n 1 April          10\n 2 August         10\n 3 December       10\n 4 February        8\n 5 February /1     2\n 6 Jan 2004        1\n 7 Jan 2005        1\n 8 Jan 2006        1\n 9 Jan 2007        1\n10 Jan 2008        1\n# ‚Ñπ 12 more rows\n```\n:::\n\n```{.r .cell-code}\neggs<-eggs%>%\n  mutate(date = str_remove(date, \" /1\"))\n\neggs%>%\n  count(date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 √ó 2\n   date         n\n   <chr>    <int>\n 1 April       10\n 2 August      10\n 3 December    10\n 4 February    10\n 5 Jan 2004     1\n 6 Jan 2005     1\n 7 Jan 2006     1\n 8 Jan 2007     1\n 9 Jan 2008     1\n10 Jan 2009     1\n# ‚Ñπ 11 more rows\n```\n:::\n\n```{.r .cell-code}\neggs<-eggs%>%\n  separate(date, into=c(\"month\", \"year\"), sep=\" \")%>%\n  fill(year)\n\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 √ó 6\n   month     year  xlarge_dozen xlarge_halfdozen large_dozen large_halfdozen\n   <chr>     <chr> <chr>        <chr>            <chr>       <chr>          \n 1 Jan       2004  230          132              230         126            \n 2 February  2004  230          134.5            226.25      128.5          \n 3 March     2004  230          137              225         131            \n 4 April     2004  234.5        137              225         131            \n 5 May       2004  236          137              225         131            \n 6 June      2004  241          137              231.375     133.5          \n 7 July      2004  241          137              233.5       133.5          \n 8 August    2004  241          137              233.5       133.5          \n 9 September 2004  241          135.875          233.5       129.75         \n10 October   2004  241          135.5            233.5       128.5          \n# ‚Ñπ 110 more rows\n```\n:::\n:::\n\n\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\nThe year is a seperate entity now. The data is divided into cols for the month. The row data is year and type of egg.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs <- eggs %>%\n  pivot_longer(cols=contains(\"large\"), \n               names_to = \"eggType\",\n               values_to = \"avgPrice\")\n\neggs <- eggs %>%\n  pivot_wider(names_from = month,\n               values_from = avgPrice)\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 √ó 14\n   year  eggType   Jan   February March April May   June  July  August September\n   <chr> <chr>     <chr> <chr>    <chr> <chr> <chr> <chr> <chr> <chr>  <chr>    \n 1 2004  xlarge_d‚Ä¶ 230   230      230   234.5 236   241   241   241    241      \n 2 2004  xlarge_h‚Ä¶ 132   134.5    137   137   137   137   137   137    135.875  \n 3 2004  large_do‚Ä¶ 230   226.25   225   225   225   231.‚Ä¶ 233.5 233.5  233.5    \n 4 2004  large_ha‚Ä¶ 126   128.5    131   131   131   133.5 133.5 133.5  129.75   \n 5 2005  xlarge_d‚Ä¶ 241   241      241   241   241   241   241   241    241      \n 6 2005  xlarge_h‚Ä¶ 135.5 135.5    135.5 135.5 135.5 135.5 135.5 135.5  135.5    \n 7 2005  large_do‚Ä¶ 233.5 233.5    233.5 233.5 233.5 233.5 233.5 233.5  233.5    \n 8 2005  large_ha‚Ä¶ 128.5 128.5    128.5 128.5 128.5 128.5 128.5 128.5  128.5    \n 9 2006  xlarge_d‚Ä¶ 241   241      241.‚Ä¶ 241.5 241.5 241.5 241.5 241.5  241.5    \n10 2006  xlarge_h‚Ä¶ 135.5 135.5    135.5 135.5 135.5 135.5 135.5 135.5  135.5    \n# ‚Ñπ 30 more rows\n# ‚Ñπ 3 more variables: October <chr>, November <chr>, December <chr>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}