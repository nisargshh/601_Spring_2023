{
  "hash": "41efc1ca7f8811eb17fce3755f9c1b7a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Tim Shores\"\ndescription: \"Introduction to Visualization\"\ndate: \"03/29/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\nexecute: \n  echo: false\ncategories:\n  - challenge_5\n  - public_schools\n---\n\n::: {.cell}\n\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set and describe it\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n## Read in data\n\nThe school source CSV file is a relatively tidy table. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchool <- tibble(read.csv(file = \"../posts/_data/Public_School_Characteristics_2017-18.csv\")) # read in data\npsrows <- prettyNum(nrow(dfPubSchool), big.mark = \",\", scientific = FALSE)  # Apply comma-separated format\npscols <- prettyNum(ncol(dfPubSchool), big.mark = \",\", scientific = FALSE)\nnumtoprint <- 12\n```\n:::\n\n\n### Briefly describe the data\n\nThe public school characteristics (2017-18) data set includes **100,729** observations under **79** variables. Each observation is a school. Variables show information about public schools in every US state and county. Information includes numeric variables for enrollment in each grade, employment (expressed as full-time equivalent, FTE), demographics, and school status in terms of grade level, charter, magnet, and other categories. The data is likely the product of routine inventory collected by the Department of Education.\n\nHere are the first 12 rows from the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchool[1:numtoprint,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 79\n       X     Y OBJECTID     NCESSCH NMCNTY  SURVY…¹ STABR  LEAID ST_LE…² LEA_N…³\n   <dbl> <dbl>    <int>       <dbl> <chr>   <chr>   <chr>  <int> <chr>   <chr>  \n 1 -149.  61.6        1 20051000480 Matanu… 2017-2… AK    200510 AK-33   Matanu…\n 2 -157.  71.3        2 20061000470 North … 2017-2… AK    200610 AK-36   North …\n 3 -151.  60.5        3 20039000448 Kenai … 2017-2… AK    200390 AK-24   Kenai …\n 4 -151.  60.6        4 20039000463 Kenai … 2017-2… AK    200390 AK-24   Kenai …\n 5 -151.  60.6        5 20039000513 Kenai … 2017-2… AK    200390 AK-24   Kenai …\n 6 -133.  56.1        6 20070000526 Prince… 2017-2… AK    200700 AK-44   Southe…\n 7 -135.  57.5        7 20073000477 Hoonah… 2017-2… AK    200730 AK-09   Chatha…\n 8 -149.  63.9        8 20077000447 Denali… 2017-2… AK    200770 AK-02   Denali…\n 9 -166.  54.1        9 20000700004 Aleuti… 2017-2… AK    200007 AK-56   Aleuti…\n10 -163.  54.9       10 20000700007 Aleuti… 2017-2… AK    200007 AK-56   Aleuti…\n11 -162.  55.0       11 20000700177 Aleuti… 2017-2… AK    200007 AK-56   Aleuti…\n12 -160.  55.4       12 20000700461 Aleuti… 2017-2… AK    200007 AK-56   Aleuti…\n# … with 69 more variables: SCH_NAME <chr>, LSTREET1 <chr>, LSTREET2 <chr>,\n#   LSTREET3 <chr>, LCITY <chr>, LSTATE <chr>, LZIP <int>, LZIP4 <int>,\n#   PHONE <chr>, GSLO <chr>, GSHI <chr>, VIRTUAL <chr>, TOTFRL <int>,\n#   FRELCH <int>, REDLCH <int>, PK <int>, KG <int>, G01 <int>, G02 <int>,\n#   G03 <int>, G04 <int>, G05 <int>, G06 <int>, G07 <int>, G08 <int>,\n#   G09 <int>, G10 <int>, G11 <int>, G12 <int>, G13 <int>, TOTAL <int>,\n#   MEMBER <int>, AM <int>, HI <int>, BL <int>, WH <int>, HP <int>, TR <int>, …\n```\n:::\n:::\n\n\n## Tidy Data (as needed)\n\nI'm interested in learning more about public school employment. It doesn't take much to tidy this data for that question, because both Total enrollment and FTE are single variables in the original data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSub <- dfPubSchool %>%\n  subset(select = \n           c(NMCNTY, TOTAL, FTE, CHARTER_TEXT)) %>%\n  mutate(CHARTER_TEXT = factor(CHARTER_TEXT)) %>% \n  print(n = numtoprint)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100,729 × 4\n   NMCNTY                            TOTAL    FTE CHARTER_TEXT\n   <chr>                             <int>  <dbl> <fct>       \n 1 Matanuska-Susitna Borough           447 24.9   No          \n 2 North Slope Borough                  30  3     No          \n 3 Kenai Peninsula Borough             167 10.4   Yes         \n 4 Kenai Peninsula Borough             260 16.8   Yes         \n 5 Kenai Peninsula Borough               5  0.670 No          \n 6 Prince of Wales-Hyder Census Area    18  1.90  No          \n 7 Hoonah-Angoon Census Area            11  0     No          \n 8 Denali Borough                      737  5.79  No          \n 9 Aleutians East Borough               13  1.96  No          \n10 Aleutians East Borough                6  1.39  No          \n11 Aleutians East Borough               94 12     No          \n12 Aleutians East Borough              120 12.9   No          \n# … with 100,717 more rows\n```\n:::\n:::\n\n\nThe summary shows a list of schools with FTE outliers on the upper end.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#define function to calculate mode\nfind_mode <- function(x) {\n  u <- unique(x[!is.na(x)]) # unique list as an index, without NA\n  tab <- tabulate(match(x[!is.na(x)], u))  # count how many times each index member occurs\n  u[tab == max(tab)] #  the max occurrence is the mode\n  mean(u) # return mean in case the data is multimodal\n}\n\ndfPubSchoolSub %>% \n  summarise(\n    meanFTE = mean(FTE, na.rm = TRUE), \n    modeFTE = find_mode(FTE), \n    minFTE = fivenum(FTE, na.rm = TRUE)[1], \n    lowHingeFTE = fivenum(FTE, na.rm = TRUE)[2], \n    medianFTE = median(FTE, na.rm = TRUE), \n    upHingeFTE = fivenum(FTE, na.rm = TRUE)[4], \n    maxFTE = fivenum(FTE, na.rm = TRUE)[5], \n    count = n()\n    ) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 8\n  meanFTE modeFTE minFTE lowHingeFTE medianFTE upHingeFTE maxFTE  count\n    <dbl>   <dbl>  <dbl>       <dbl>     <dbl>      <dbl>  <dbl>  <int>\n1    32.6    59.9      0          17      27.6         41   1419 100729\n```\n:::\n\n```{.r .cell-code}\ndfPubSchoolSubFTE <- subset(dfPubSchoolSub, select = c(NMCNTY, FTE)) %>%\n  group_by(NMCNTY) %>%\n  summarise(countySumFTE = sum(FTE), .groups = 'drop')\n\nfteRows <- nrow(dfPubSchoolSubFTE) \n```\n:::\n\n\nGrouping by county reduces the data set to 1959 observations. This is one observation for each county. *Sanity check:* The source data set has 1959 distinct counties. We have a match.\n\n\nThe summary and boxplot visualization of FTE summed by county is as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSubFTE %>% \n  summarise(\n    meanCFTE = mean(countySumFTE, na.rm = TRUE), \n    modeCFTE = find_mode(countySumFTE), \n    minCFTE = fivenum(countySumFTE, na.rm = TRUE)[1], \n    lowHingeCFTE = fivenum(countySumFTE, na.rm = TRUE)[2], \n    medianCFTE = median(countySumFTE, na.rm = TRUE), \n    upHingeCFTE = fivenum(countySumFTE, na.rm = TRUE)[4], \n    maxCFTE = fivenum(countySumFTE, na.rm = TRUE)[5], \n    count = n()\n    ) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 8\n  meanCFTE modeCFTE minCFTE lowHingeCFTE medianCFTE upHingeCFTE maxCFTE count\n     <dbl>    <dbl>   <dbl>        <dbl>      <dbl>       <dbl>   <dbl> <int>\n1     645.     648.       3         118.       251.        575.  19743.  1959\n```\n:::\n\n```{.r .cell-code}\ndfPubSchoolSubFTE %>% \n  ggplot(aes(x = countySumFTE)) +\n  geom_boxplot(outlier.colour = \"red\",\n         outlier.shape = 2,\n         outlier.size = 3) +\n  coord_flip() +\n  ggtitle(\"Boxplot of All Counties\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndfPubSchoolSubFTE %>% \n  filter(countySumFTE <= 2000) %>% \n  ggplot(aes(x = countySumFTE)) +\n  geom_boxplot(outlier.colour = \"red\",\n         outlier.shape = 2,\n         outlier.size = 3) +\n  coord_flip() +\n  ggtitle(\"Boxplot of Counties with Fewer than 2000 FTE\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\ndfPubSchoolSubFTE %>% \n  filter(countySumFTE > 2000) %>% \n  ggplot(aes(x = countySumFTE)) +\n  geom_boxplot(outlier.colour = \"red\",\n         outlier.shape = 2,\n         outlier.size = 3) +\n  coord_flip() +\n  ggtitle(\"Boxplot of Counties with More than 2000 FTE\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n\n\n## Univariate Visualizations\n\nI use two histograms to group counties by number of public school FTE employees.\n\nThe first histogram shows all counties with total FTE less than or equal to 2000, in bins of width 10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSubFTE %>%\n  filter(countySumFTE <= 2000) %>%\n  ggplot(aes(countySumFTE)) + \n  geom_histogram(binwidth = 10) +\n  ggtitle(\"Histogram of Counties with 2000 or Fewer FTE\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThe second histogram shows all counties with total FTE greater than 2000, in bins of width 100.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSubFTE %>%\n  filter(countySumFTE > 2000) %>%\n  ggplot(aes(x = countySumFTE)) + \n  geom_histogram(binwidth = 100) +\n  ggtitle(\"Histogram of Counties with More than 2000 FTE\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSubFTECharter <- subset(dfPubSchoolSub, select = c(NMCNTY, TOTAL, FTE, CHARTER_TEXT)) %>%\n  group_by(NMCNTY, CHARTER_TEXT) %>%\n  summarise(countyMeanEnr = mean(TOTAL), countyMeanFTE = mean(FTE), .groups = 'drop')\n\nfteCharterRows <- nrow(dfPubSchoolSubFTECharter)\n```\n:::\n\n\nGrouping by county *and* charter produces a data set with 2860 observations. Comparative boxplots show the difference mean staffing between charter and non-charter schools (as well as schools with a \"not applicable\" charter status, which is confusing and makes me want to find the data dictionary.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSubFTECharter %>% \n  ggplot(aes(x = countyMeanFTE, y = CHARTER_TEXT)) +\n  geom_boxplot(outlier.colour = \"red\",\n         outlier.shape = 2,\n         outlier.size = 3) +\n  coord_flip() +\n  ggtitle(\"Boxplot of Mean FTE by County and by Charter Status\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThis scatterplot uses color to separate charters from non-charters. To zoom in on a smaller subset, the filter function looks at counties with mean enrollment of 200 students or less, and it omits schools without an applicable charter status. \n\nThis scatterplot shows how charters have greater dispersion than non-charters in this enrollment segment. The linear trendlines support the observation that non-charters employ more staff.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfPubSchoolSubFTECharter %>% \n  filter(countyMeanEnr <= 200, CHARTER_TEXT != \"Not Applicable\") %>%\n  ggplot(aes(x = countyMeanEnr, y = countyMeanFTE, color = factor(CHARTER_TEXT))) +\n  geom_point() +\n  geom_smooth(method = \"lm\", fill = NA) + \n  labs(title = \"Total Enrollment and FTE by County and by Charter Status\",\n       subtitle = \"Mean county enrollment 200 or less\",\n       caption = \"Trendline: linear\")\n```\n\n::: {.cell-output-display}\n![](TimShores_challenge5_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::",
    "supporting": [
      "TimShores_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}