{
  "hash": "c9a4562330cf11f1b724469cb5336dd0",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Prachiti Parkar\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"08/18/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   abc_poll.csv ⭐\n-   poultry_tidy.xlsx or organiceggpoultry.xls⭐⭐\n-   FedFundsRate.csv⭐⭐⭐\n-   hotel_bookings.csv⭐⭐⭐⭐\n-   debt_in_trillions.xlsx ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoultry_data <-readxl::read_excel(\"_data/poultry_tidy.xlsx\")\n\npoultry_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 600 × 4\n   Product  Year Month     Price_Dollar\n   <chr>   <dbl> <chr>            <dbl>\n 1 Whole    2013 January           2.38\n 2 Whole    2013 February          2.38\n 3 Whole    2013 March             2.38\n 4 Whole    2013 April             2.38\n 5 Whole    2013 May               2.38\n 6 Whole    2013 June              2.38\n 7 Whole    2013 July              2.38\n 8 Whole    2013 August            2.38\n 9 Whole    2013 September         2.38\n10 Whole    2013 October           2.38\n# … with 590 more rows\n```\n:::\n\n```{.r .cell-code}\nsummary(poultry_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Product               Year         Month            Price_Dollar  \n Length:600         Min.   :2004   Length:600         Min.   :1.935  \n Class :character   1st Qu.:2006   Class :character   1st Qu.:2.150  \n Mode  :character   Median :2008   Mode  :character   Median :2.350  \n                    Mean   :2008                      Mean   :3.390  \n                    3rd Qu.:2011                      3rd Qu.:3.905  \n                    Max.   :2013                      Max.   :7.037  \n                                                      NA's   :7      \n```\n:::\n\n```{.r .cell-code}\nmissing_data <- filter(poultry_data, is.na(Price_Dollar))\n\n#Checking if there is any missing data\nmissing_data \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 4\n  Product         Year Month    Price_Dollar\n  <chr>          <dbl> <chr>           <dbl>\n1 Bone-in Breast  2004 January            NA\n2 Bone-in Breast  2004 February           NA\n3 Bone-in Breast  2004 March              NA\n4 Bone-in Breast  2004 April              NA\n5 Bone-in Breast  2004 May                NA\n6 Bone-in Breast  2004 June               NA\n7 Thighs          2004 January            NA\n```\n:::\n\n```{.r .cell-code}\nunique(poultry_data$Product)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Whole\"          \"B/S Breast\"     \"Bone-in Breast\" \"Whole Legs\"    \n[5] \"Thighs\"        \n```\n:::\n:::\n\n\n### Briefly describe the data\nThe data consists of 4 columns and 600 rows from the year 2004 to 2013. Specifically it contains the products, Whole, B/S Breast, Bone-in Breast, Whole legs and Thighs. The price ranges from minimum 1.935 to 7.037. We can see from summary that some of the values of prices are missing, particularly 7. I tried to dive deeper and understood that most of these are of product Bone-in breast and thighs.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nData is already tidy. We can choose to remove NA data but I believe since it has other column information, those rows are important too. \n\n\n::: {.cell}\n\n:::\n\n\nAny additional comments?\n\n## Identify variables that need to be mutated\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, are all time variables correctly coded as dates? Are all string variables reduced and cleaned to sensible categories? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\nAccording to me, the year and months need to be joined so that we can sort them and also, we need to understand if price is low, medium or high instead of checking the exact price, we can just look at the variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoultry_data <- poultry_data %>%\n        mutate(Date = ym(paste(Year, Month)))\n\n\n\npoultry_data <- poultry_data %>%\n  mutate(Price_type = case_when(Price_Dollar < 3 ~ 'low',\n                             Price_Dollar < 5 ~ 'med',\n                             Price_Dollar > 5 ~ 'high'))\n\nunique(poultry_data$Price_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"low\"  \"high\" \"med\"  NA    \n```\n:::\n\n```{.r .cell-code}\npoultry_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 600 × 6\n   Product  Year Month     Price_Dollar Date       Price_type\n   <chr>   <dbl> <chr>            <dbl> <date>     <chr>     \n 1 Whole    2013 January           2.38 2013-01-01 low       \n 2 Whole    2013 February          2.38 2013-02-01 low       \n 3 Whole    2013 March             2.38 2013-03-01 low       \n 4 Whole    2013 April             2.38 2013-04-01 low       \n 5 Whole    2013 May               2.38 2013-05-01 low       \n 6 Whole    2013 June              2.38 2013-06-01 low       \n 7 Whole    2013 July              2.38 2013-07-01 low       \n 8 Whole    2013 August            2.38 2013-08-01 low       \n 9 Whole    2013 September         2.38 2013-09-01 low       \n10 Whole    2013 October           2.38 2013-10-01 low       \n# … with 590 more rows\n```\n:::\n:::\n\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}