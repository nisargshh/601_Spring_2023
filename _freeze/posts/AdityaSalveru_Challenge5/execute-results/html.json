{
  "hash": "91174612982d3ac4624545d0d45fb738",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Aditya Salveru\"\ndescription: \"Introduction to Visualization\"\ndate: \"04/25/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - air_bnb\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nab_nyc <- read.csv(\"_data/AB_NYC_2019.csv\")\nab_nyc %>%  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    id                                             name host_id   host_name\n1 2539               Clean & quiet apt home by the park    2787        John\n2 2595                            Skylit Midtown Castle    2845    Jennifer\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632   Elisabeth\n4 3831                  Cozy Entire Floor of Brownstone    4869 LisaRoxanne\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192       Laura\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322       Chris\n  neighbourhood_group neighbourhood latitude longitude       room_type price\n1            Brooklyn    Kensington 40.64749 -73.97237    Private room   149\n2           Manhattan       Midtown 40.75362 -73.98377 Entire home/apt   225\n3           Manhattan        Harlem 40.80902 -73.94190    Private room   150\n4            Brooklyn  Clinton Hill 40.68514 -73.95976 Entire home/apt    89\n5           Manhattan   East Harlem 40.79851 -73.94399 Entire home/apt    80\n6           Manhattan   Murray Hill 40.74767 -73.97500 Entire home/apt   200\n  minimum_nights number_of_reviews last_review reviews_per_month\n1              1                 9  2018-10-19              0.21\n2              1                45  2019-05-21              0.38\n3              3                 0                            NA\n4              1               270  2019-07-05              4.64\n5             10                 9  2018-11-19              0.10\n6              3                74  2019-06-22              0.59\n  calculated_host_listings_count availability_365\n1                              6              365\n2                              2              355\n3                              1              365\n4                              1              194\n5                              1                0\n6                              1              129\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n::: {.cell}\n\n```{.r .cell-code}\nab_nyc %>%  colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"id\"                             \"name\"                          \n [3] \"host_id\"                        \"host_name\"                     \n [5] \"neighbourhood_group\"            \"neighbourhood\"                 \n [7] \"latitude\"                       \"longitude\"                     \n [9] \"room_type\"                      \"price\"                         \n[11] \"minimum_nights\"                 \"number_of_reviews\"             \n[13] \"last_review\"                    \"reviews_per_month\"             \n[15] \"calculated_host_listings_count\" \"availability_365\"              \n```\n:::\n:::\n\nThis data represents the hotels and their prices in NYC. There are a total of 16 columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nab_nyc$neighbourhood_group %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Brooklyn\"      \"Manhattan\"     \"Queens\"        \"Staten Island\"\n[5] \"Bronx\"        \n```\n:::\n\n```{.r .cell-code}\nab_nyc$room_type %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Private room\"    \"Entire home/apt\" \"Shared room\"    \n```\n:::\n\n```{.r .cell-code}\nab_nyc$minimum_nights %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]    1    3   10   45    2    5    4   90    7   14   60   29   30  180    9\n [16]   31    6   15    8   26   28  200   50   17   21   11   25   13   35   27\n [31]   18   20   40   44   65   55  120  365  122   19  240   88  115  150  370\n [46]   16   80  181  265  300   59  185  360   56   12   70   39   24   32 1000\n [61]  110  270   22   75  250   62   23 1250  364   74  198  100  500   43   91\n [76]  480   53   99  160   47  999  186  366   68   93   87  183  299  175   98\n [91]  133  354   42   33   37  225  400  105  184  153  134  222   58  210  275\n[106]  182  114   85   36\n```\n:::\n:::\n\n\nThere are three types of room - Private, Shared and Entire apartment. All the rooms are segregated into areas in NY. The minimum number of nights vary widely accross all the rentals.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nThere are some missing values in some columns(For ex reviews_per_month). replace it with 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nab_nyc <- ab_nyc %>%  replace_na(list(reviews_per_month = 0))\n\nab_nyc <- ab_nyc %>%  filter(price>0)\n```\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n:::\n\n\n## Univariate Visualizations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab_nyc,aes(neighbourhood_group))+geom_bar()+labs(title = \"Count of rentals in different neighbourhood groups\")\n```\n\n::: {.cell-output-display}\n![](AdityaSalveru_Challenge5_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab_nyc,aes(room_type))+geom_bar()+labs(title = \"Count of different type of rooms\")\n```\n\n::: {.cell-output-display}\n![](AdityaSalveru_Challenge5_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheap_hotels <- ab_nyc %>% arrange(price) %>% filter(row_number()<1000)\nggplot(cheap_hotels,aes(price))+geom_histogram()+labs(title = \"Price distribution of cheapest 1000 rooms\")\n```\n\n::: {.cell-output-display}\n![](AdityaSalveru_Challenge5_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab_nyc,aes(neighbourhood_group,price))+geom_point()+labs(title = \"Distirbution of prices of hotels accross different neighbourhood_groups\")\n```\n\n::: {.cell-output-display}\n![](AdityaSalveru_Challenge5_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nAny additional comments?\n",
    "supporting": [
      "AdityaSalveru_Challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}