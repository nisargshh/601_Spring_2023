{
  "hash": "7636df330eacbae2e9fbfcd38cf5e1f1",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Pooja Shah\"\ndescription: \"Joining Data\"\ndate: \"04/29/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors <- read_csv(\"_data/snl_actors.csv\")\nhead(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  aid            url           type  gender \n  <chr>          <chr>         <chr> <chr>  \n1 Kate McKinnon  /Cast/?KaMc   cast  female \n2 Alex Moffat    /Cast/?AlMo   cast  male   \n3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n4 Chris Redd     /Cast/?ChRe   cast  male   \n5 Kenan Thompson /Cast/?KeTh   cast  male   \n6 Carey Mulligan /Guests/?3677 guest andy   \n```\n:::\n\n```{.r .cell-code}\nsnl_casts <- read_csv(\"_data/snl_casts.csv\")\nhead(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  aid                sid featured first_epid last_epid update_anchor n_episodes\n  <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>              <dbl>\n1 A. Whitney Brown    11 TRUE       19860222        NA FALSE                  8\n2 A. Whitney Brown    12 TRUE             NA        NA FALSE                 20\n3 A. Whitney Brown    13 TRUE             NA        NA FALSE                 13\n4 A. Whitney Brown    14 TRUE             NA        NA FALSE                 20\n5 A. Whitney Brown    15 TRUE             NA        NA FALSE                 20\n6 A. Whitney Brown    16 TRUE             NA        NA FALSE                 20\n# ℹ 1 more variable: season_fraction <dbl>\n```\n:::\n\n```{.r .cell-code}\nsnl_seasons <- read_csv(\"_data/snl_seasons.csv\")\nhead(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n    sid  year first_epid last_epid n_episodes\n  <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n1     1  1975   19751011  19760731         24\n2     2  1976   19760918  19770521         22\n3     3  1977   19770924  19780520         20\n4     4  1978   19781007  19790526         20\n5     5  1979   19791013  19800524         20\n6     6  1980   19801115  19810411         13\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors <- snl_actors %>%\n  drop_na()\nsnl_actors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,249 × 4\n   aid            url           type  gender \n   <chr>          <chr>         <chr> <chr>  \n 1 Kate McKinnon  /Cast/?KaMc   cast  female \n 2 Alex Moffat    /Cast/?AlMo   cast  male   \n 3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n 4 Chris Redd     /Cast/?ChRe   cast  male   \n 5 Kenan Thompson /Cast/?KeTh   cast  male   \n 6 Carey Mulligan /Guests/?3677 guest andy   \n 7 Marcus Mumford /Guests/?3679 guest male   \n 8 Aidy Bryant    /Cast/?AiBr   cast  female \n 9 Steve Higgins  /Crew/?StHi   crew  male   \n10 Mikey Day      /Cast/?MiDa   cast  male   \n# ℹ 2,239 more rows\n```\n:::\n\n```{.r .cell-code}\nsnl_casts <- snl_casts %>%\n  select(aid, sid, featured, update_anchor, n_episodes, season_fraction)\nsnl_casts <- snl_casts %>%\n  drop_na()\nsnl_casts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 6\n   aid                sid featured update_anchor n_episodes season_fraction\n   <chr>            <dbl> <lgl>    <lgl>              <dbl>           <dbl>\n 1 A. Whitney Brown    11 TRUE     FALSE                  8           0.444\n 2 A. Whitney Brown    12 TRUE     FALSE                 20           1    \n 3 A. Whitney Brown    13 TRUE     FALSE                 13           1    \n 4 A. Whitney Brown    14 TRUE     FALSE                 20           1    \n 5 A. Whitney Brown    15 TRUE     FALSE                 20           1    \n 6 A. Whitney Brown    16 TRUE     FALSE                 20           1    \n 7 Alan Zweibel         5 TRUE     FALSE                  5           0.25 \n 8 Sasheer Zamata      39 TRUE     FALSE                 11           0.524\n 9 Sasheer Zamata      40 TRUE     FALSE                 21           1    \n10 Sasheer Zamata      41 FALSE    FALSE                 21           1    \n# ℹ 604 more rows\n```\n:::\n\n```{.r .cell-code}\nsnl_seasons <- snl_seasons %>% \n  drop_na()\nsnl_seasons\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 5\n     sid  year first_epid last_epid n_episodes\n   <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n 1     1  1975   19751011  19760731         24\n 2     2  1976   19760918  19770521         22\n 3     3  1977   19770924  19780520         20\n 4     4  1978   19781007  19790526         20\n 5     5  1979   19791013  19800524         20\n 6     6  1980   19801115  19810411         13\n 7     7  1981   19811003  19820522         20\n 8     8  1982   19820925  19830514         20\n 9     9  1983   19831008  19840512         19\n10    10  1984   19841006  19850413         17\n# ℹ 36 more rows\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"update_anchor\"  \n[5] \"n_episodes\"      \"season_fraction\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n\n```{.r .cell-code}\nsnl_season <- snl_seasons %>%\n  select(sid, year)\n\nsnl_cast <- snl_casts %>%\n  select(aid, sid, n_episodes)\n```\n:::\n\n\n## Join Data\n\nBe sure to include a sanity check, and double-check that case count is correct!\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_data <- snl_casts %>%\n  select(-update_anchor, -season_fraction, -n_episodes) %>%\n  left_join(snl_season, by=\"sid\")\n\nsnl_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 4\n   aid                sid featured  year\n   <chr>            <dbl> <lgl>    <dbl>\n 1 A. Whitney Brown    11 TRUE      1985\n 2 A. Whitney Brown    12 TRUE      1986\n 3 A. Whitney Brown    13 TRUE      1987\n 4 A. Whitney Brown    14 TRUE      1988\n 5 A. Whitney Brown    15 TRUE      1989\n 6 A. Whitney Brown    16 TRUE      1990\n 7 Alan Zweibel         5 TRUE      1979\n 8 Sasheer Zamata      39 TRUE      2013\n 9 Sasheer Zamata      40 TRUE      2014\n10 Sasheer Zamata      41 FALSE     2015\n# ℹ 604 more rows\n```\n:::\n\n```{.r .cell-code}\n#Graph representing aid and which years they worked in\n\nggplot(snl_data, aes(aid)) +\n  geom_bar() +\n  labs(title = \"Graph showing how many season each aid worked for\")\n```\n\n::: {.cell-output-display}\n![](PoojaShah_Challenge8_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsnl_data1 <- snl_actors %>%\n  select(-url) %>%\n  inner_join(snl_cast, by=\"aid\")\n\nsnl_data1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 607 × 5\n   aid           type  gender   sid n_episodes\n   <chr>         <chr> <chr>  <dbl>      <dbl>\n 1 Kate McKinnon cast  female    37          5\n 2 Kate McKinnon cast  female    38         21\n 3 Kate McKinnon cast  female    39         21\n 4 Kate McKinnon cast  female    40         21\n 5 Kate McKinnon cast  female    41         21\n 6 Kate McKinnon cast  female    42         21\n 7 Kate McKinnon cast  female    43         21\n 8 Kate McKinnon cast  female    44         21\n 9 Kate McKinnon cast  female    45         18\n10 Kate McKinnon cast  female    46         17\n# ℹ 597 more rows\n```\n:::\n\n```{.r .cell-code}\ngender_data <- snl_actors %>%\n  filter(gender == \"male\" | gender == \"female\")\n\nsnl_data1 %>%\n  filter(type == \"cast\") %>%\n  ggplot(aes(sid, fill=gender)) +\n  geom_bar() +\n  labs(title = \"Distribution of Cast per Season by Gender\")\n```\n\n::: {.cell-output-display}\n![](PoojaShah_Challenge8_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(gender_data, aes(gender)) +\n  geom_bar() +\n  facet_wrap(vars(type)) +\n  labs(title = \"Distribution of Gender Data\")\n```\n\n::: {.cell-output-display}\n![](PoojaShah_Challenge8_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n:::\n",
    "supporting": [
      "PoojaShah_Challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}