{
  "hash": "d6eff02b01624b2730a9aee9415fa59c",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Instructions\"\nauthor: \"Kevin Martell Luya\"\ndescription: \"Introduction to Visualization\"\ndate: \"04/23/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(lattice)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <-read_xls(\"./_data/StateCounty2012.xls\",\n                skip = 4,\n                col_names= c(\"STATE\", \"_trash\",  \"COUNTY\",\n                          \"_trash\", \"EMPLOYEES\"))%>%\n  select(!contains(\"_trash\"))%>%\n  filter(!str_detect(STATE, \"Total\"))\n\ndata<-head(data, -2)%>%\n  mutate(COUNTY = ifelse(STATE==\"CANADA\", \"CANADA\", COUNTY))\n\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,931 × 3\n   STATE COUNTY               EMPLOYEES\n   <chr> <chr>                    <dbl>\n 1 AE    APO                          2\n 2 AK    ANCHORAGE                    7\n 3 AK    FAIRBANKS NORTH STAR         2\n 4 AK    JUNEAU                       3\n 5 AK    MATANUSKA-SUSITNA            2\n 6 AK    SITKA                        1\n 7 AK    SKAGWAY MUNICIPALITY        88\n 8 AL    AUTAUGA                    102\n 9 AL    BALDWIN                    143\n10 AL    BARBOUR                      1\n# … with 2,921 more rows\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad_summaries <- data %>%\n  group_by(STATE) %>%\n  summarise(\"state_employees_average\" = round(sum(EMPLOYEES)/ n_distinct(COUNTY)),\n         \"state_counties\"= n_distinct(COUNTY)) \nrailroad_summaries\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 54 × 3\n   STATE  state_employees_average state_counties\n   <chr>                    <dbl>          <int>\n 1 AE                           2              1\n 2 AK                          17              6\n 3 AL                          64             67\n 4 AP                           1              1\n 5 AR                          54             72\n 6 AZ                         210             15\n 7 CA                         239             55\n 8 CANADA                     662              1\n 9 CO                          64             57\n10 CT                         324              8\n# … with 44 more rows\n```\n:::\n:::\n\n\n## Univariate Visualizations\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(railroad_summaries, aes(state_employees_average))+\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](KevinMartell_challenge5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(railroad_summaries, aes(state_counties,state_employees_average))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](KevinMartell_challenge5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad_summaries %>% \n  arrange(desc(state_employees_average)) %>%\n  slice(1:15) %>%\n  ggplot(aes(reorder(STATE,-state_employees_average),state_employees_average))+\n  geom_col(fill=\"green\")+\n  labs(x=\"STATE\")\n```\n\n::: {.cell-output-display}\n![](KevinMartell_challenge5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrailroad_summaries %>% \n  arrange((state_employees_average)) %>%\n  slice(1:15) %>%\n  ggplot(aes(reorder(STATE,-state_employees_average),state_employees_average))+\n  geom_col(fill=\"green\")+\n  labs(x=\"STATE\")\n```\n\n::: {.cell-output-display}\n![](KevinMartell_challenge5_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "KevinMartell_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}